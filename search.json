[{"path":"https://josesamos.github.io/starschemar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Jose Samos Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"multidimensional data model defined 1990s aim supporting data analysis. Data multidimensional systems obtained operational systems transformed adapt new structure. Transformations can carried using professional ETL (extract, transform load) tools. Recently, tools aimed end users emerged, also aimed performing transformation operations. tools useful carry transformation process, provide development environment define transformation operations general way. Frequently, operations performed aim transform flat table (data comes operational systems) star schema (implements multidimensional system). tools mentioned , transformation can carried , requires lot work. main objective starschemar package: Define transformations allow obtaining star schemas flat tables easily. addition, includes basic data cleaning operations, incremental data refresh operations query operations, adapted context. rest document structured follows: First, basic concepts dimensional modelling star schemas summarized. following illustrative example package works. , operations available package briefly presented. Finally, document ends conclusions bibliography.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling-and-star-schemas","dir":"Articles","previous_headings":"","what":"Dimensional modelling and star schemas","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"content section summary based mainly Adamson (2010) Kimball Ross (2013). intended present fundamental concepts area relevant understand functionality, naming use starschemar package.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling","dir":"Articles","previous_headings":"Dimensional modelling and star schemas","what":"Dimensional modelling","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Dimensional modelling aims obtain simple data models. Simplicity sought two reasons: decision-makers can easily understand data, also can easily queried. dimensional modelling, analysis business process performed modelling measured. measures called facts, descriptors context facts dimensions. Facts numerical data, decision makers want see various levels detail, defined dimensions. numerical data fact (tools consider way). dimensional modelling designer differentiate facts dimensions. criteria considered distinguish , example: can defined different levels detail fact. quantitative takes continuous values, fact. provides context dimension. Sometimes measures associated business process, simply recorded combination dimensions occurred. situation often called factless facts, Jensen, Pedersen, Thomsen (2010) prefer call measureless facts. case, including measures available, measure can considered represents number times combination dimension values occurs.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensions-and-dimension-attributes","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Dimensional modelling","what":"Dimensions and dimension attributes","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Attributes considered designer dimensions can grouped taking account natural affinities . particular, can grouped describe “, , , , ” associated modelled business process. Two attributes share natural affinity related one context. relationships determined transactions activities, can occur multiple contexts, occurs, must located different dimensions. way, dimension made set naturally related dimension attributes describe context facts. Dimensions used two purposes: fact selection fact grouping desired level detail. Additionally, dimensions hierarchies levels descriptors can defined. details can found Jensen, Pedersen, Thomsen (2010). concepts used current version package.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"facts-and-measures","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Dimensional modelling","what":"Facts and measures","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"fact granularity, determined attributes dimensions considered moment. Thus, measure fact two components, numerical property fact formula, frequently SUM aggregation function, allows combining several values measure obtain new value measure coarser granularity (Jensen, Pedersen, Thomsen 2010). According behaviour obtain coarser granularity, three types measures distinguished: additive, semi-additive non-additive. additive measures, SUM always valid formula maintains meaning measure granularity changes. semi-additive measures, point using SUM changing level detail dimensions meaning measure changes, frequently occurs dimensions represents time measures representing inventory level. non-additive measures, values combined across dimension using SUM result obtained different meaning original measure (generally occurs ratios, percentages unit amounts unit cost unit price). useful measures additive. non-additive measures, can generally redefined additive measures.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schemas","dir":"Articles","previous_headings":"Dimensional modelling and star schemas","what":"Star schemas","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Dimensional models implemented RDBMS (Relational Database Management Systems) using table dimension called star schemas resemblance star-like structure: fact table centre dimension tables around . Thus, dimension attributes columns respective dimension tables, measures columns fact table. possible implementations RDBMS normalize dimensions known snowflake schema. details can found Jensen, Pedersen, Thomsen (2010). considered package.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimension-tables","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas","what":"Dimension tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Dimension tables contain context associated business process measures. Although can contain type data, numerical data generally used dimension attributes query tools consider numeric data measure. Dimension attributes NULL value source problems querying since DBMS query tools sometimes handle inconsistently, result depends product. recommended avoid use NULL replace descriptive text. case dates, recommended replace NULL values arbitrary date far future.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"surrogate-keys","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas > Dimension tables","what":"Surrogate keys","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"dimension table contains dimension attributes also surrogate key column. column unique identifier intrinsic meaning: generally integer primary key dimension table. Adamson (2010) surrogate keys easily identifiable suffix “_key” column name (criterion also applied starschemar package). Dimension tables also contain key columns uniquely identify associated entities operational system. separation surrogate keys natural keys allows star schema store changes dimensions. Therefore, use surrogate keys dimensions solution SCD (slowly changing dimensions) problem. problem specifically addressed version package.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"special-dimensions","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas > Dimension tables","what":"Special dimensions","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"cases, sake simplicity, helpful create table contains dimension attributes natural affinities , generally low-cardinality flags indicators. result known junk dimension. require special support, designer’s define . Sometimes dimension attributes left fact table, usually transaction identifiers. considered primary key dimension associated table, reason known degenerate dimension. Degenerate dimensions allowed package. single dimension can referenced multiple times fact table, reference linked different logical role dimension. separate dimension views, unique attribute column names, called role dimensions common dimension called role-playing dimension. Associated multiple star schemas conformed dimensions presented section Conformed dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"fact-table","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas","what":"Fact table","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"centre star schema fact table. addition containing measures, fact table includes foreign keys refer surrogate keys dimension tables.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"primary-key","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas > Fact table","what":"Primary key","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"subset foreign keys, along possibly degenerate dimensions, considered form primary key fact table. starschemar package, since degenerate dimensions allowed, primary key made subset foreign keys.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"grain","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas > Fact table","what":"Grain","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"subset dimensions forms primary key defines level detail stored fact table, known fact table’s grain. design process, important designer clearly define grain fact table (usually defined listing dimensions whose surrogate keys form primary key): way ensure facts stored level detail. finest grain, row fact table corresponds measures event vice versa, influenced possible reports may obtained. two facts different grains, set different fact tables.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"multiple-fact-tables","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas","what":"Multiple fact tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"frequent need several fact tables various reasons: find measurements different grain. measures occur simultaneously, example, one occurs, value others vice versa. reality different business processes, one fact table dimensions common. known fact constellation corresponds Kimball enterprise data warehouse bus architecture.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"conformed-dimensions","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Star schemas","what":"Conformed dimensions","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schemas share set common dimensions, dimensions called conformed dimensions. several possibilities conformed dimensions, obvious form dimension tables share structure content, , identical dimensions. one considered version starschemar package.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"cleaning-and-conforming-data","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Additional operations","what":"Cleaning and conforming data","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"data loaded star schema, errors inconsistencies can discovered . cases, best make corrections source data, operational systems. Sometimes possible option modify data loading star schema even already loaded. Inconsistencies often found dimensions, dimensions integrated one, example generate role-playing dimension conformed dimensions. Support modifying dimension data provided package.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimension-enrichment","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Additional operations","what":"Dimension enrichment","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"attributes dimensions , possibilities offer filter aggregate data. reason, convenient enrich dimensions new attributes, whenever possible. New attributes often defined based existing ones. must way associate new attributes dimensions. attributes dimensions , possibilities offer filter aggregate data. reason, convenient enrich dimensions new attributes, whenever possible. New attributes often defined based existing ones. must way associate new attributes dimensions. Operations defined package export dimension attributes values repeated, also import , new attributes added.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"incremental-refresh","dir":"Articles","previous_headings":"Dimensional modelling and star schemas > Additional operations","what":"Incremental refresh","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schema built, initial load performed available data moment time onwards. Operational systems continue operate produce data. want incorporate data star schema, two possibilities: Carry new load data available time. Perform incremental refresh new data. order carry second option, CDC (change data capture) system allows exclusively obtain new data produced. Sometimes also convenient delete data considered longer necessary, generally data distant past. package, considered can obtain new data, possibly mixed updates data already incorporated star schema, order carry incremental refresh star schemas . Operations also offered select data delete considered necessary.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"starting-data-sets","dir":"Articles","previous_headings":"An illustrative example","what":"Starting data sets","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"illustrate package works use small part Deaths 122 U.S. cities - 1962-2016. 122 Cities Mortality Reporting System data set1. Specifically, data first 11 weeks 1962 considered. table , first rows original data shown. week city, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. can seen one measure, deaths, defined two different granularities: week-city-cause (data columns “Pneumonia Influenza Deaths” “Deaths”) week-city-age bracket (data 5 columns right). means need two fact tables include data star schemas. data partially form pivot table, data two tables generated2, one granularity. Additionally, following operations carried : show incremental refresh, data selected: one hand, first 9 weeks considered, , following weeks separately. show possibilities data modification operations correct errors, data modified generate missing data errors. table , first rows flat table contains data according age bracket shown. following table shows first 18 rows flat table containing data based cause death. calculated column Deaths added. can see missing data (columns Year WEEK), errors (value “Bridgepor” column City) data first 9 weeks. layout possibilities display, new columns dates generated. Next, tables, new columns related date added can seen. flat tables considered starting point obtain star schemas example. available package: mrs_age mrs_cause respectively.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling-1","dir":"Articles","previous_headings":"An illustrative example","what":"Dimensional modelling","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"flat table, goal define attributes correspond facts dimensions. facts, measures aggregation functions defined. dimensions, attributes natural affinity must grouped. attribute can appear definition.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling-data-according-to-age-range","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Dimensional modelling data according to age range","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"avoid write name attributes table, following function can form string. Thus, can copy paste name needed. definition dimensional model data considered shown . case, elements explicitly defined, including aggregation functions name additional measure representing number rows aggregated, always included. data two three possible time-related dimensions considered.","code":"dput(colnames(mrs_age)) #> c(\"Reception Year\", \"Reception Week\", \"Reception Date\", \"Data Availability Year\",  #> \"Data Availability Week\", \"Data Availability Date\", \"Year\", \"WEEK\",  #> \"Week Ending Date\", \"REGION\", \"State\", \"City\", \"Age Range\", \"Deaths\" #> ) library(starschemar)  dm_mrs_age <- dimensional_model() |>   define_fact(     name = \"mrs_age\",     measures = c(       \"Deaths\"     ),     agg_functions = c(       \"SUM\"     ),     nrow_agg = \"nrow_agg\"   ) |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   ) |>   define_dimension(     name = \"when_available\",     attributes = c(       \"Data Availability Date\",       \"Data Availability Week\",       \"Data Availability Year\"     )   ) |>   define_dimension(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ) |>   define_dimension(     name = \"who\",     attributes = c(       \"Age Range\"     )   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling-data-according-to-cause","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Dimensional modelling data according to cause","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"case data according cause death, definition model shown . aggregation function indicated, default, SUM considered. Although explicitly stated, also includes default measure relative number rows aggregated. case, three dimensions related date defined.","code":"dm_mrs_cause <- dimensional_model() |>   define_fact(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"Other Deaths\"     ),   ) |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   ) |>   define_dimension(     name = \"when_received\",     attributes = c(       \"Reception Date\",       \"Reception Week\",       \"Reception Year\"     )   ) |>   define_dimension(     name = \"when_available\",     attributes = c(       \"Data Availability Date\",       \"Data Availability Week\",       \"Data Availability Year\"     )   ) |>   define_dimension(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-definition-and-transformation-constellations","dir":"Articles","previous_headings":"An illustrative example","what":"Star schema definition and transformation: Constellations","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"define star schema, need flat table dimensional model defined . defined, can apply format modification operations .","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-definition-for-data-according-to-age-range","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations","what":"Star schema definition for data according to age range","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"basic definition operation star schema shown below3. first rows obtained dimension fact tables shown . data original flat table structured form dimension tables fact tables. Data columns original table included dimensions repeated. surrogate key added dimension tables foreign keys fact table. Next, apply format modification operations original structure obtained. First, role playing dimension defined based dimensions related dates. , work databases, names adapted snake case criterion. Finally, data type attributes dimensions transformed columns except date columns character data type, case numerical data, allowed indicate length field fill leading zeros, undefined values replaced indicated value. first rows new dimension fact tables shown . result, can seen dimensions related date now role dimensions data, role playing dimension generated integrated data. fact table continues refer role dimensions, value foreign keys adapted possible new values surrogate keys. Additionally can seen week field now length 2 0 left (useful sort numbers text format).","code":"st_mrs_age <- star_schema(mrs_age, dm_mrs_age) st_mrs_age <- st_mrs_age |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-definition-for-data-according-to-cause","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations","what":"Star schema definition for data according to cause","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"going define star schema apply similar transformations flat table. transformations can applied order. case, since role playing dimension definition last transformation defined, format week column defined three date dimensions obtain equivalent result. result obtained shown . case three role dimensions defined role playing dimension.","code":"st_mrs_cause <- star_schema(mrs_cause, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-transformation-cleaning-and-conforming-data","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations","what":"Star schema transformation, cleaning and conforming data","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Star schemas defined flat table fields. cases may interesting rename elements schema, especially attributes dimensions measures. hand, dimensions can enriched adding additional attributes, generally derived rest attributes. transformations considered section. can perform data cleaning conforming operations star schema dimensions. Updates defined star schema can applied another common dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-rename","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations > Star schema transformation, cleaning and conforming data","what":"Star schema rename","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"necessary, elements star schema can renamed. functions especially useful renaming attributes dimensions measures facts definition operations allowed us select columns flat table, modifying names. going modify attribute names dimension two design cases. values attribute called region actually correspond concept division organization US territory, going rename way two design cases. Data according age: data according cause: also going modify name measure data according age: Additionally, functions available modify names dimensions facts. case necessary modify depend names starting base data defined wanted.","code":"st_mrs_age <-   st_mrs_age |> rename_dimension_attributes(     name = \"when\",     attributes = c(\"week_ending_date\", \"week\", \"year\"),     new_names = c(       \"when_happened_date\",       \"when_happened_week\",       \"when_happened_year\"     )   ) |>   rename_dimension_attributes(     name = \"where\",     attributes = c(\"region\"),     new_names = c(\"division\")   ) st_mrs_cause <-   st_mrs_cause |> rename_dimension_attributes(     name = \"when\",     attributes = c(\"week_ending_date\", \"week\", \"year\"),     new_names = c(       \"when_happened_date\",       \"when_happened_week\",       \"when_happened_year\"     )   ) |>   rename_dimension_attributes(     name = \"where\",     attributes = c(\"region\"),     new_names = c(\"division\")   ) st_mrs_age <-   st_mrs_age |> rename_measures(measures = c(\"deaths\"),                                  new_names = c(\"n_deaths\"))"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"definition-of-updates","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations > Star schema transformation, cleaning and conforming data","what":"Definition of updates","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Using following code, first , get names dimensions star schema, , get name (can see rows using utils::View function). several role dimensions, enough consult one , updates defined propagated rest. Reviewing dimensions can detect need updates. Errors also sometimes detected comparing values equivalent values obtained data sources.","code":"dim_names <- st_mrs_age |>     get_dimension_names()  where <- st_mrs_age |>   get_dimension(\"where\")  # View(where) # where[where$where_key %in% c(1, 2, 62), ]  when <- st_mrs_age |>   get_dimension(\"when\")  # View(when) # when[when$when_key %in% c(36, 37, 73), ]  who <- st_mrs_age |>   get_dimension(\"who\")  # View(who)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"updates-in-the-where-dimension","dir":"Articles","previous_headings":"","what":"starschemar: Obtaining Star Schemas from Flat Tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"dimension find wrong value “Bridgepor”, generated , correct value “Bridgeport”, also included dimension. Additionally, trying find additional data associated cities, found another error city “Wilimington”, whose correct name “Wilmington”. mentioned instances. Updates can defined several ways. One referencing surrogate key. Although functions dimension surrogate key referred , updates consider values rest columns corresponding dimension. way, achieved updates can applied equivalent dimensions star schemas, values surrogate key necessarily coincide dimension updates originally defined. Next, define update indicates values record “1” (“Bridgepor”) dimension must match record “2” (“Bridgeport”). case city, define update replaces value indicated fields records meet defined condition, shown .","code":"updates_st_mrs_age <- record_update_set() |>   match_records(dimension = where,                 old = 1,                 new = 2) updates_st_mrs_age <- updates_st_mrs_age |>   update_selection_general(     dimension = where,     columns_old = c(\"state\", \"city\"),     old_values = c(\"DE\", \"Wilimington\"),     columns_new = c(\"city\"),     new_values = c(\"Wilmington\")   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"updates-in-the-when-dimension","dir":"Articles","previous_headings":"","what":"starschemar: Obtaining Star Schemas from Flat Tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"selection rows involved update operations referred surrogate key dimension. corresponding updates shown . values record “37” must match record “36” (registers unified). values register “73” replaced provided.","code":"updates_st_mrs_age <- updates_st_mrs_age |>   match_records(dimension = when,                 old = 37,                 new = 36) |>   update_record(     dimension = when,     old = 73,     values = c(\"1962-02-17\", \"07\", \"1962\")   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"updates-in-the-who-dimension","dir":"Articles","previous_headings":"","what":"starschemar: Obtaining Star Schemas from Flat Tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"case dimension, want include code value age_range attribute sorted increasingly based value. case, substitute old value new one indicated attribute.","code":"updates_st_mrs_age <- updates_st_mrs_age |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"<1 year\"),     new_values = c(\"1: <1 year\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"1-24 years\"),     new_values = c(\"2: 1-24 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"25-44 years\"),     new_values = c(\"3: 25-44 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"45-64 years\"),     new_values = c(\"4: 45-64 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"65+ years\"),     new_values = c(\"5: 65+ years\")   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"updates-application","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations > Star schema transformation, cleaning and conforming data","what":"Updates application","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"updates defined, can applied star schema defined, shown . result obtained first star schema shown . can seen row value “Bridgepor” city column disappeared: merged row correct value. update also transmitted fact table. Although seen tables, happened dates unified update. updates can also applied star schemas dimensions common original star schema, shown . Updates defined dimensions included star schema ignored. case referring dimension. Likewise, records meet conditions get old value, also ignored.","code":"st_mrs_age <- st_mrs_age |>   modify_dimension_records(updates_st_mrs_age) st_mrs_cause <- st_mrs_cause |>   modify_dimension_records(updates_st_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimension-enrichment-1","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations > Star schema transformation, cleaning and conforming data","what":"Dimension enrichment","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"original attributes included dimensions, can obtain new attributes facilitate queries offer new query possibilities.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"enrich-the-who-dimension","dir":"Articles","previous_headings":"","what":"starschemar: Obtaining Star Schemas from Flat Tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Suppose interested defining broader age ranges existing ones. operation can done enriching corresponding dimension. First, export attributes consider table form, case age range. Next, can see result export operation. table selected attributes duplicate values eliminated (case repeated values). table add columns want. case new column define new broader age range. new table can seen . enrich dimension considering new data table. can see result , dimension new defined attribute.","code":"tb_who <-   enrich_dimension_export(st_mrs_age,                           name = \"who\",                           attributes = c(\"age_range\")) v <-   c(\"0-24 years\", \"0-24 years\", \"25+ years\", \"25+ years\", \"25+ years\") tb_who <-   tibble::add_column(tb_who,                      wide_age_range = v) st_mrs_age <-   st_mrs_age |>   enrich_dimension_import(name = \"who\", tb_who)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"enrich-the-where-dimension","dir":"Articles","previous_headings":"","what":"starschemar: Obtaining Star Schemas from Flat Tables","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"dimension can proceed way done dimension: Export data, complete manually import , shown . new table division data can seen . look names divisions add data regions belong. add name states county city belongs, proceed way. However, easier try locate data use directly. data available ft_usa_states ft_usa_city_county data sets, respectively. However, operate way, importing data error occurs. reason data dimension matches data imported table. can determine missing data using following function. result obtained shown . cases, problem occurs value “Unknown” state attribute. must add row data importing . problem occurs apply solution add county data4. can see first rows final result .","code":"tb_where <-   enrich_dimension_export(st_mrs_age,                           name = \"where\",                           attributes = c(\"division\")) tb_where <-   tibble::add_column(     tb_where,     division_name = c(       \"New England\",       \"Middle Atlantic\",       \"East North Central\",       \"West North Central\",       \"South Atlantic\",       \"East South Central\",       \"West South Central\",       \"Mountain\",       \"Pacific\"     ),     region = c('1',                '1',                '2',                '2',                '3',                '3',                '3',                '4',                '4'),     region_name = c(       \"Northeast\",       \"Northeast\",       \"Midwest\",       \"Midwest\",       \"South\",       \"South\",       \"South\",       \"West\",       \"West\"     )   )  st_mrs_age <-   st_mrs_age |>   enrich_dimension_import(name = \"where\", tb_where)  st_mrs_cause <-   st_mrs_cause |>   enrich_dimension_import(name = \"where\", tb_where) tb_missing <-   st_mrs_age |>   enrich_dimension_import_test(name = \"where\", ft_usa_states) tb_where_state <- ft_usa_states |>   tibble::add_row(state = \"Unknown\", state_name = \"Unknown\")  st_mrs_age <-   st_mrs_age |>   enrich_dimension_import(name = \"where\", tb_where_state)  st_mrs_cause <-   st_mrs_cause |>   enrich_dimension_import(name = \"where\", tb_where_state) tb_where_county <- ft_usa_city_county |>   tibble::add_row(city = \"Unknown\",                   state = \"Unknown\",                   county = \"Unknown\")  st_mrs_age <-   st_mrs_age |>   enrich_dimension_import(name = \"where\", tb_where_county)  st_mrs_cause <-   st_mrs_cause |>   enrich_dimension_import(name = \"where\", tb_where_county)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-definition","dir":"Articles","previous_headings":"An illustrative example > Star schema definition and transformation: Constellations","what":"Constellation definition","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"constellation defined list star schemas, shown . dimensions name star schemas must compatible structure type columns, defined conformed dimensions. conformed dimensions share instances original dimensions, implies possible modifications surrogate keys transmitted foreign keys component fact tables. tables obtained conformed dimensions shown . can seen conformed dimensions considered regardless type dimension star schema. Definition conformed dimensions imply change definition dimensions star schemas: Role role playing dimensions remain , rows may changed. particular case discrepancies values star schemas dimension instances, since data source . discrepancies detected integration carried , new modification operations can defined conformed dimensions (done dimensions star schemas) applied constellation level automatically transmitted component star schemas (modify_conformed_dimension_records).","code":"ct_mrs <- constellation(list(st_mrs_age, st_mrs_cause), name = \"mrs\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"incremental-refresh-1","dir":"Articles","previous_headings":"An illustrative example","what":"Incremental refresh","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schemas built data available moment, may obtain additional data, structure initial data later time. Sometimes new data also includes data previous periods operate . conditions, suppose get data sets mrs_age_w10, mrs_age_w11, mrs_cause_w10, mrs_cause_w11, weeks 10 11 (data star schemas runs week 9). cases, data previous periods included. perform incremental refresh star schema, must new data star schema format. Additionally, done data cleaning, likely correct part corrected errors new data. reason, best package transformations carried original data function form can easily applied new data.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"refresh-operations-for-data-according-to-age-range","dir":"Articles","previous_headings":"An illustrative example > Incremental refresh","what":"Refresh operations for data according to age range","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"can see function groups transformations defined data according age range. apply function new data sets, shown . Errors may occur data different original, especially dimension enrichment part, data missing. case, must eliminate function lines corresponding enrichment later try enrich dimension checking errors enrich_dimension_import_test. data format, can apply incremental refresh original star schema, follows. case, assumed data previous periods appears among new data, new data replace previous data (value “replace” existing parameter). star schema integrated constellation, incremental refresh can performed , follows. case, corresponding star schema, conformed dimensions star schemas share updated.","code":"mrs_age_definition <-   function(ft,            dm,            updates,            tb_who,            tb_where,            tb_where_state,            tb_where_county) {     star_schema(ft, dm) |>       role_playing_dimension(         dim_names = c(\"when\", \"when_available\"),         name = \"When Common\",         attributes = c(\"date\", \"week\", \"year\")       ) |>       snake_case() |>       character_dimensions(NA_replacement_value = \"Unknown\",                            length_integers = list(week = 2)) |>       rename_dimension_attributes(         name = \"when\",         attributes = c(\"week_ending_date\", \"week\", \"year\"),         new_names = c(           \"when_happened_date\",           \"when_happened_week\",           \"when_happened_year\"         )       ) |>       rename_dimension_attributes(         name = \"where\",         attributes = c(\"region\"),         new_names = c(\"division\")       ) |>       rename_measures(measures = c(\"deaths\"),                       new_names = c(\"n_deaths\")) |>       modify_dimension_records(updates) |>       enrich_dimension_import(name = \"who\", tb_who) |>       enrich_dimension_import(name = \"where\", tb_where) |>       enrich_dimension_import(name = \"where\", tb_where_state) |>       enrich_dimension_import(name = \"where\", tb_where_county)   } st_mrs_age_w10 <-   mrs_age_definition(     mrs_age_w10,     dm_mrs_age,     updates_st_mrs_age,     tb_who,     tb_where,     tb_where_state,     tb_where_county   )  st_mrs_age_w11 <-   mrs_age_definition(     mrs_age_w11,     dm_mrs_age,     updates_st_mrs_age,     tb_who,     tb_where,     tb_where_state,     tb_where_county   ) st_mrs_age <- st_mrs_age |>   incremental_refresh_star_schema(st_mrs_age_w10, existing = \"replace\") |>   incremental_refresh_star_schema(st_mrs_age_w11, existing = \"replace\") ct_mrs <- ct_mrs |>   incremental_refresh_constellation(st_mrs_age_w10, existing = \"replace\") |>   incremental_refresh_constellation(st_mrs_age_w11, existing = \"replace\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"refresh-operations-for-data-according-to-cause","dir":"Articles","previous_headings":"An illustrative example > Incremental refresh","what":"Refresh operations for data according to cause","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Similar done age data, can done cause data, shown . case, previously existing data treated differently previous case, now done grouping using defined aggregation functions, assuming additional data entered (value “group” existing parameter).","code":"mrs_cause_definition <-   function(ft,            dm,            updates,            tb_where,            tb_where_state,            tb_where_county) {     star_schema(ft, dm) |>       snake_case() |>       character_dimensions(         NA_replacement_value = \"Unknown\",         length_integers = list(           week = 2,           data_availability_week = 2,           reception_week = 2         )       ) |>       role_playing_dimension(         dim_names = c(\"when\", \"when_received\", \"when_available\"),         name = \"when_common\",         attributes = c(\"date\", \"week\", \"year\")       ) |>       rename_dimension_attributes(         name = \"when\",         attributes = c(\"week_ending_date\", \"week\", \"year\"),         new_names = c(           \"when_happened_date\",           \"when_happened_week\",           \"when_happened_year\"         )       ) |>       rename_dimension_attributes(         name = \"where\",         attributes = c(\"region\"),         new_names = c(\"division\")       ) |>       modify_dimension_records(updates) |>       enrich_dimension_import(name = \"where\", tb_where) |>       enrich_dimension_import(name = \"where\", tb_where_state) |>       enrich_dimension_import(name = \"where\", tb_where_county)   }  st_mrs_cause_w10 <-   mrs_cause_definition(     mrs_cause_w10,     dm_mrs_cause,     updates_st_mrs_age,     tb_where,     tb_where_state,     tb_where_county   )  st_mrs_cause_w11 <-   mrs_cause_definition(     mrs_cause_w11,     dm_mrs_cause,     updates_st_mrs_age,     tb_where,     tb_where_state,     tb_where_county   )  st_mrs_cause <- st_mrs_cause |>   incremental_refresh_star_schema(st_mrs_cause_w10, existing = \"group\") |>   incremental_refresh_star_schema(st_mrs_cause_w11, existing = \"group\")  ct_mrs <- ct_mrs |>   incremental_refresh_constellation(st_mrs_cause_w10, existing = \"group\") |>   incremental_refresh_constellation(st_mrs_cause_w11, existing = \"group\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"filter-and-purge-operations","dir":"Articles","previous_headings":"An illustrative example > Incremental refresh","what":"Filter and purge operations","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Sometimes data refresh consists eliminating data longer necessary, generally corresponds period stopped analysed can also reasons. general, can selected considering combination dimensions, just time dimension. Suppose want delete Boston data working constellation level. First, select considering stars make constellation. can work star constellation level. example, going constellation level (working temporary variable lose data), . operations removed fact data. first records dimension shown . fact data removed, can remove data dimensions longer needed using following function. result dimension shown . Boston data disappeared surrogate keys reassigned (temporary variable).","code":"st1 <- ct_mrs |>   get_star_schema(\"mrs_age\") |>   filter_fact_rows(name = \"where\", city == \"Boston\")  st2 <- ct_mrs |>   get_star_schema(\"mrs_cause\") |>   filter_fact_rows(name = \"where\", city == \"Boston\") ct_tmp <- ct_mrs |>   incremental_refresh_constellation(st1, existing = \"delete\") |>   incremental_refresh_constellation(st2, existing = \"delete\") ct_tmp <- ct_tmp |>   purge_dimensions_constellation()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"exporting-results","dir":"Articles","previous_headings":"An illustrative example","what":"Exporting results","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"made necessary definitions transformations, can export data work database query tool. Instead exporting data specific format particular tool, exported tibble-based structures can easily handled.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema","dir":"Articles","previous_headings":"An illustrative example > Exporting results","what":"Star schema","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Various export possibilities offered. Specifically, star schema one export data flat table. main difference initial data cleaned conformed . operation offered completeness. work flat tables, package suitable. work databases, useful able export star schema list tibble dimension fact tables, shown . Optionally, export function allows role playing dimensions included.","code":"tl <- st_mrs_age |>   star_schema_as_tibble_list()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation","dir":"Articles","previous_headings":"An illustrative example > Exporting results","what":"Constellation","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"export constellation data, well tibble list, multistar format may interesting, list tibble fact tables another dimension tables.","code":"ms_mrs <- ct_mrs |>   constellation_as_multistar()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"multistar","dir":"Articles","previous_headings":"An illustrative example > Exporting results","what":"multistar","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"can obtain flat table, implemented using tibble, multistar (can result query). one fact table, necessary provide name. first rows flat table obtained result shown .","code":"ft <- ms_mrs |>   multistar_as_flat_table(fact = \"mrs_age\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"query-functions","dir":"Articles","previous_headings":"An illustrative example","what":"Query functions","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"main motivation query functions package possibility select subsets data exported presented packages. can define queries data multistar format. Data format can obtained star constellation. query created using dimensional_query executed using run_query. can refine using select_dimension, select_fact filter_dimension much deem appropriate. result query multistar structure. way, can define queries result others. result can also transformed flat table. content flat table shown . result can seen , query defined year city level, single city, data available single year, one row. Columns nrow_agg mrs_cause_nrow_agg show number original rows make result row. result form flat table, pivottabler package can used present form pivot table.","code":"ms_mrs <- ct_mrs |>   constellation_as_multistar() ms <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                    attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\")) |>   select_fact(name = \"mrs_age\",               measures = c(\"n_deaths\")) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Bridgeport\") |>   run_query() ft <- ms |>   multistar_as_flat_table()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"available-transformation-operations","dir":"Articles","previous_headings":"","what":"Available transformation operations","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Package starschemar offers operations transform flat tables star schemas also export exploit queries. flat table, define dimensional model classifying attributes facts dimensions (dimensional modelling). flat table dimensional model obtain star schema can transform; various star schemas can define constellation (star schema constellation definition). Dimensions contain rows without duplicates, can apply operations perform data cleaning conform (cleaning conforming data). new data obtained, necessary refresh existing data means incremental refresh operations (incremental refresh). results obtained can exported consulted tools (exporting results). Finally, basic queries can performed R (query functions), especially select data export.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimensional-modelling-2","dir":"Articles","previous_headings":"Available transformation operations","what":"Dimensional modelling","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Starting flat table, dimensional model defined specifying attributes make dimensions measurements facts. result dimensional_model object. carried following functions: dimensional_model(): empty dimensional_model object created definition facts dimensions can added. Example: define_dimension(): define dimension dimensional_model object, define name set attributes make . Example: define_fact(): define facts dimensional_model object, essential data name set measurements can empty (explicit measurements). Associated measurement, aggregation function required, default SUM. Examples:","code":"dm <- dimensional_model() dm <- dimensional_model() |>   define_dimension(name = \"When\",                    attributes = c(\"Week Ending Date\",                                   \"WEEK\",                                   \"Year\")) dm <- dimensional_model() |>   define_fact(     name = \"mrs_age\",     measures = c(\"Deaths\"),     agg_functions = c(\"SUM\"),     nrow_agg = \"nrow_agg\"   )  dm <- dimensional_model() |>   define_fact(name = \"Factless fact\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-and-constellation-definition","dir":"Articles","previous_headings":"Available transformation operations","what":"Star schema and constellation definition","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"dimensional model implemented using star schema. can several related star schemas common dimensions together form fact constellation.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-definition","dir":"Articles","previous_headings":"Available transformation operations > Star schema and constellation definition","what":"Star schema definition","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schema defined flat table dimensional model definition. defined, star schema can transformed defining role playing dimensions, changing writing style element names type dimension attributes. operations carried following functions: star_schema(): Creates star_schema object flat table (implemented tibble) dimensional_model object. Example: role_playing_dimension(): Given list star_schema dimension names, structure, role playing dimension indicated name attributes generated. original dimensions become role dimensions defined new role playing dimension. Example: snake_case(): Transform fact, dimension, measurement, attribute names according snake case style. Example: character_dimensions(): Transforms numeric type attributes dimensions character type. star_schema numerical data measurements situated facts. Numerical data dimensions usually codes, day, week, month year numbers. tools consider numerical data measurement, reason appropriate transform numerical data dimensions character data. also allows indicating literal used case numerical value defined. Example:","code":"st <- star_schema(mrs_age, dm_mrs_age) st <- star_schema(mrs_age, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"Date\", \"Week\", \"Year\")   ) st <- star_schema(mrs_age, dm_mrs_age) |>   snake_case() st <- star_schema(mrs_age, dm_mrs_age) |>   character_dimensions()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-rename-1","dir":"Articles","previous_headings":"Available transformation operations > Star schema and constellation definition","what":"Star schema rename","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schema defined, can rename elements. necessary able rename attributes dimensions measures facts definition operations allowed us select columns flat table. completeness also dimensions facts can renamed. carry operations, following functions available: rename_dimension(): Set new name dimension. Example: get_dimension_attribute_names(): Get name attributes dimension, easier modify necessary. Example: rename_dimension_attributes(): Set new names attributes dimension. Example: rename_fact(): Set new name facts. Example: get_measure_names(): Get name measures fact, easier modify necessary. Example: rename_measures(): Set new names measures facts. Example:","code":"st <- st_mrs_age |>   rename_dimension(name = \"when\", new_name = \"when_happened\") attribute_names <-    st_mrs_age |> get_dimension_attribute_names(\"when\") st <-   st_mrs_age |> rename_dimension_attributes(     name = \"when\",     attributes = c(\"when_happened_week\", \"when_happened_year\"),     new_names = c(\"week\", \"year\")   ) st <- st_mrs_age |> rename_fact(\"age\") measure_names <-    st_mrs_age |> get_measure_names() st <-   st_mrs_age |> rename_measures(measures = c(\"n_deaths\"),                                  new_names = c(\"num_deaths\"))"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-definition-1","dir":"Articles","previous_headings":"Available transformation operations > Star schema and constellation definition","what":"Constellation definition","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Based various star schemas, constellation can defined star schemas share common dimensions. Dimensions name must shared. defined following function: constellation(): Creates constellation object list star_schema objects. dimensions name star schemas conformable. Example:","code":"ct <- constellation(list(st_mrs_age, st_mrs_cause), name = \"mrs\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"cleaning-and-conforming-data-1","dir":"Articles","previous_headings":"Available transformation operations","what":"Cleaning and conforming data","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star schemas fact constellations defined, data cleaning operations can carried dimensions. three groups functions: One obtain components star schemas constellations. Another define data cleaning operations dimensions. One apply operations star schemas constellations.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"obtaining-components","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data","what":"Obtaining components","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"can obtain dimensions star schema conformed dimensions fact constellation. Available functions cases similar.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-1","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data > Obtaining components","what":"Star schema","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"get_dimension_names(): Get names dimensions star schema. Role playing dimensions considered. Example: get_dimension(): Get dimension star schema given name. Role dimensions can obtained role playing dimensions. Example:","code":"dn <- st_mrs_age |>   get_dimension_names() where <- st_mrs_age |>   get_dimension(\"where\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-1","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data > Obtaining components","what":"Constellation","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"get_conformed_dimension_names(): Get names conformed dimensions constellation. Example: get_conformed_dimension(): Get conformed dimension constellation given name. Example: get_star_schema_names(): Get names star schemas constellation. Example: get_star_schema(): Get star schema constellation given name. Example:","code":"dn <- ct_mrs |>   get_conformed_dimension_names() when <- ct_mrs |>   get_conformed_dimension(\"when\") stn <- ct_mrs |>   get_star_schema_names() age <- ct_mrs |>   get_star_schema(\"mrs_age\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"definition-of-updates-1","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data","what":"Definition of updates","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Modifications defined dimension rows various ways based exclusively values dimension fields. Although surrogate key intervenes definition, result, internally, depend can applied generally star schemas. record_update_set(): record_update_set object created. Stores updates dimension records. update made dimension name, old value set, new value set. Example: match_records(): dimension, given primary key two records, adds update set updates modifies combination values rest attributes first record become second. Example: update_record(): dimension, given primary key one record, adds update set updates modifies combination values rest attributes selected record become given. Example: update_selection(): dimension, given vector column names, vector old values vector new values, adds update set updates modifies records combination old values columns new values columns. Example: update_selection_general(): dimension, given vector column names, vector old values columns, another vector column names, vector new values columns, adds update set updates modifies records combination old values first column vector new values second column vector. Example:","code":"updates <- record_update_set() updates <- record_update_set() |>   match_records(dimension = where,                 old = 1,                 new = 2) updates <- record_update_set() |>   update_record(     dimension = who,     old = 1,     values = c(\"1: <1 year\")   ) updates <- record_update_set() |>   update_selection(     dimension = where,     columns = c(\"city\"),     old_values = c(\"Bridgepor\"),     new_values = c(\"Bridgeport\")   ) updates <- record_update_set() |>   update_selection_general(     dimension = where,     columns_old = c(\"state\", \"city\"),     old_values = c(\"CT\", \"Bridgepor\"),     columns_new = c(\"city\"),     new_values = c(\"Bridgeport\")   )"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"updates-application-1","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data","what":"Updates application","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"Defined updates can applied star schema conformed dimension fact constellation.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-2","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data > Updates application","what":"Star schema","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"modify_dimension_records(): Given list dimension record update operations, applied dimensions star_schema object. Update operations must defined set functions available purpose. Example:","code":"st <- st_mrs_age |>   modify_dimension_records(updates_st_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-2","dir":"Articles","previous_headings":"Available transformation operations > Cleaning and conforming data > Updates application","what":"Constellation","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"modify_conformed_dimension_records(): Given list dimension record update operations, applied conformed dimensions constellation object. Update operations must defined set functions available purpose. Example:","code":"ct <- ct_mrs |>   modify_conformed_dimension_records(updates_st_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"dimension-enrichment-2","dir":"Articles","previous_headings":"Available transformation operations","what":"Dimension enrichment","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"enrich dimension new attributes related others already included , first, export attributes new ones depend, define new attributes, import table attributes added dimension. enrich_dimension_export(): Export selected attributes dimension, without repeated combinations, enrich dimension. role dimension exported, work associated role playing dimension. Example: enrich_dimension_import(): dimension star schema tibble attached. contains dimension attributes new attributes. values associated rows dimension included tibble, dimension enriched new attributes. Role dimensions directly enriched. role playing dimension enriched, new attributes also added associated role dimensions. Example: enrich_dimension_import_test(): Previous enrich_dimension_import, checks tibble values dimension instances. Returns dimension instances match imported data. Example:","code":"tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\")) tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\"))  # Add new columns with meaningful data (these are not), possibly exporting # data to a file, populating it and importing it. tb <- tibble::add_column(tb, x = \"x\", y = \"y\", z = \"z\")  st <- enrich_dimension_import(st_mrs_age, name = \"when_common\", tb) tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\"))  # Add new columns with meaningful data (these are not), possibly exporting # data to a file, populating it and importing it. tb <- tibble::add_column(tb, x = \"x\", y = \"y\", z = \"z\")[-1, ]  tb2 <- enrich_dimension_import_test(st_mrs_age, name = \"when_common\", tb)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"incremental-refresh-2","dir":"Articles","previous_headings":"Available transformation operations","what":"Incremental refresh","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"new data obtained, incremental refresh data can carried , dimensions facts. Incremental refresh can applied star schema fact constellation, using following functions.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-3","dir":"Articles","previous_headings":"Available transformation operations > Incremental refresh","what":"Star schema","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"incremental_refresh_star_schema(): Incrementally refresh star schema content new one integrated first. dimensions integrated, records fact table whose keys match new ones, new ones can ignored, can replaced new ones, can grouped using aggregation functions, can deleted. Therefore, possible values existing parameter : “ignore”, “replace”, “group” “delete”. Example: Sometimes data refresh consists eliminating data longer necessary, generally corresponds period stopped analysed can also reasons. data can selected using following function: filter_fact_rows(): Filter fact rows based dimension conditions star schema. Dimensions remain unchanged. Filtered rows can deleted using incremental_refresh_star_schema function. Example: fact data removed (using incremental refresh functions), can remove data dimensions longer needed using following function: purge_dimensions_star_schema(): Delete instances dimensions related facts star schema. Example:","code":"st <- st_mrs_age |>   incremental_refresh_star_schema(st_mrs_age_w10, existing = \"replace\") st <- st_mrs_age |>   filter_fact_rows(name = \"when\", when_happened_week <= \"03\") |>   filter_fact_rows(name = \"where\", city == \"Bridgeport\")  st2 <- st_mrs_age |>   incremental_refresh_star_schema(st, existing = \"delete\") st3 <- st2 |>   purge_dimensions_star_schema()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-3","dir":"Articles","previous_headings":"Available transformation operations > Incremental refresh","what":"Constellation","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"incremental_refresh_constellation(): Incrementally refresh star schema constellation content new star schema integrated first. Example: purge_dimensions_constellation(): Delete instances dimensions related facts star schema. performs operation component star_schemas also conformed dimensions. Example:","code":"ct <- ct_mrs |>   incremental_refresh_constellation(st_mrs_age_w10, existing = \"replace\") ct <- ct_mrs |>   purge_dimensions_constellation()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"exporting-results-1","dir":"Articles","previous_headings":"Available transformation operations","what":"Exporting results","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"data properly structured transformed, can exported consulted tools R. Various export formats defined, star schemas constellations, using following functions.","code":""},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"star-schema-4","dir":"Articles","previous_headings":"Available transformation operations > Exporting results","what":"Star schema","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"star_schema_as_flat_table(): can obtain flat table, implemented using tibble, star schema. Example: star_schema_as_multistar(): can obtain multistar. multistar distinguishes general conformed dimensions, dimension data. can contain multiple fact tables. Example: star_schema_as_tibble_list(): can obtain tibble list . Role playing dimensions can optionally included. Example:","code":"ft <- st_mrs_age |>   star_schema_as_flat_table() ms <- st_mrs_age |>   star_schema_as_multistar() tl <- st_mrs_age |>   star_schema_as_tibble_list(include_role_playing = TRUE)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"constellation-4","dir":"Articles","previous_headings":"Available transformation operations > Exporting results","what":"Constellation","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"constellation_as_multistar(): can obtain multistar. multistar distinguishes general conformed dimensions, dimension data. can contain multiple fact tables. Example: constellation_as_tibble_list(): can obtain tibble list . Role playing dimensions can optionally included. Example:","code":"ms <- ct_mrs |>   constellation_as_multistar() tl <- ct_mrs |>   constellation_as_tibble_list(include_role_playing = TRUE)"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"multistar-1","dir":"Articles","previous_headings":"Available transformation operations > Exporting results","what":"multistar","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"multistar_as_flat_table(): can obtain flat table, implemented using tibble, multistar (can result query). one fact table, necessary provide name. Example:","code":"ft <- ms_mrs |>   multistar_as_flat_table(fact = \"mrs_age\")"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"query-functions-1","dir":"Articles","previous_headings":"Available transformation operations","what":"Query functions","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"many multidimensional query tools available. exported data, stored files, can used directly . can also perform basic queries R data multistar format, mainly selecting data export, using following functions: dimensional_query(): empty dimensional_query object created can select fact measures, dimension attributes filter dimension rows. Example: select_fact(): define fact consulted, name indicated, optionally, vector names selected measures another aggregation functions also indicated. name measure indicated, one corresponding number aggregated rows included, always included. aggregation function included, defined measures considered. Examples: select_dimension(): add dimension dimensional_query object, define name subset dimension attributes. name dimension indicated, considered attributes added. Example: filter_dimension(): Allows define selection conditions dimension rows. Conditions can defined attribute dimension (attributes selected query dimension). selection made based function dplyr::filter. Conditions defined exactly way function. Example: run_query(): selected facts, dimensions defined conditions instances, can execute query obtain result. option, can indicate want unify facts case grain. Example:","code":"ms_mrs <- ct_mrs |>   constellation_as_multistar()  dq <- dimensional_query(ms_mrs) dq <- dimensional_query(ms_mrs) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\"),     agg_functions = c(\"MAX\")   )  dq <- dimensional_query(ms_mrs) |>   select_fact(name = \"mrs_age\",               measures = c(\"n_deaths\"))  dq <- dimensional_query(ms_mrs) |>   select_fact(name = \"mrs_age\") dq <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                    attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\") dq <- dimensional_query(ms_mrs) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Boston\") ms <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                    attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\")) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\")   ) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Boston\") |>   run_query()"},{"path":"https://josesamos.github.io/starschemar/articles/starschemar.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"starschemar: Obtaining Star Schemas from Flat Tables","text":"starschemar package offers set operations allow us transform flat tables star schemas. Star schemas support definition role playing role dimensions. Additional transformation operations can applied star schema adapt format data. several star schemas can define fact constellation conformed dimensions. Cleaning conforming data operations can defined star schemas fact constellation. update data, incremental refresh operations offered, also applicable said structures. addition, several possibilities export results obtained form easily treatable tibble-based structures. Operations also provided query multidimensional structure, mainly selecting data export. Operations designed intuitive easy use. result greatly facilitates data transformation process exposed situation.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer, copyright holder.","code":""},{"path":"https://josesamos.github.io/starschemar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2023). starschemar: Obtaining Stars Flat Tables. R package version 1.2.3.9000,  https://github.com/josesamos/starschemar, https://josesamos.github.io/starschemar/.","code":"@Manual{,   title = {starschemar: Obtaining Stars from Flat Tables},   author = {Jose Samos},   year = {2023},   note = {R package version 1.2.3.9000,  https://github.com/josesamos/starschemar},   url = {https://josesamos.github.io/starschemar/}, }"},{"path":"https://josesamos.github.io/starschemar/index.html","id":"notice","dir":"","previous_headings":"","what":"Obtaining Stars from Flat Tables","title":"Obtaining Stars from Flat Tables","text":"Based package, rolap package developed. incorporates main functionalities starschemar initially intended new data model defined aim facilitating maintenance evolution.","code":""},{"path":"https://josesamos.github.io/starschemar/index.html","id":"starschemar","dir":"","previous_headings":"","what":"starschemar","title":"Obtaining Stars from Flat Tables","text":"multidimensional data model defined 1990s aim supporting data analysis. Data multidimensional systems obtained operational systems transformed adapt new structure. Transformations can carried using professional ETL (extract, transform load) tools. Recently, tools aimed end users emerged, also aimed performing transformation operations. tools useful carry transformation process, provide development environment define transformation operations general way. Frequently, operations performed aim transform flat table (data comes operational systems) star schema (implements multidimensional system). tools mentioned , transformation can carried , requires lot work. aware tools operations designed specifically support transformation process. goal starschemar define transformations allow easily obtain star schemas flat tables. addition, includes basic data cleaning, dimension enrichment, incremental data refresh query operations, adapted context.","code":""},{"path":"https://josesamos.github.io/starschemar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Obtaining Stars from Flat Tables","text":"can install released version starschemar CRAN : development version GitHub :","code":"install.packages(\"starschemar\") # install.packages(\"devtools\") devtools::install_github(\"josesamos/starschemar\")"},{"path":"https://josesamos.github.io/starschemar/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Obtaining Stars from Flat Tables","text":"illustrate package works use small part Deaths 122 U.S. cities - 1962-2016. 122 Cities Mortality Reporting System data set form flat table, first rows shown . original data modified erroneous missing data. transformation obtain star schema flat table using starschemar package follows: tables dimensions facts obtained star schema shown . tables show erroneous missing data. going perform data cleaning operations correct . new dimension fact tables shown . addition operations examples shown, starschemar offers support defining role playing role dimensions star schema, fact constellations conformed dimensions, dimension enrichment, incremental data refresh operations, ability export results various tibble-based formats, query operations, adapted context.","code":"library(starschemar)  # columns to consider in the definition dput(colnames(ft)) #> c(\"Year\", \"WEEK\", \"Week Ending Date\", \"REGION\", \"State\", \"City\",  #> \"Pneumonia and Influenza Deaths\", \"All Deaths\", \"Other Deaths\" #> )  dm <- dimensional_model() |>   define_fact(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"Other Deaths\"     ),   ) |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   ) |>   define_dimension(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   )  st <- star_schema(ft, dm) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(week = 2)   ) where <- st |>   get_dimension(\"where\")  when <- st |>   get_dimension(\"when\")  updates <- record_update_set() |>   update_selection(     dimension = where,     columns = c(\"city\"),     old_values = c(\"Bridgepor\"),     new_values = c(\"Bridgeport\")   ) |>   match_records(dimension = when,                 old = 3,                 new = 2)  st <- st |>   modify_dimension_records(updates)"},{"path":"https://josesamos.github.io/starschemar/reference/character_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a dimension numeric attributes to character — character_dimension","title":"Transform a dimension numeric attributes to character — character_dimension","text":"Transforms numeric type attributes dimension character type.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a dimension numeric attributes to character — character_dimension","text":"","code":"character_dimension(   dimension,   length_integers = TRUE,   NA_replacement_value = NULL )  # S3 method for dimension_table character_dimension(   dimension,   length_integers = TRUE,   NA_replacement_value = NULL )"},{"path":"https://josesamos.github.io/starschemar/reference/character_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a dimension numeric attributes to character — character_dimension","text":"dimension dimension_table object. length_integers list pairs name = length, attribute name length. NA_replacement_value string, value replace NA values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a dimension numeric attributes to character — character_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform a dimension numeric attributes to character — character_dimension","text":"allows indicating amplitude fields, filling zeros left: useful make alphabetical order result correspond numerical order. also allows indicating literal used case numerical value defined. dates, defined values, value \"9999-12-31\" assigned.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform dimension numeric attributes to character — character_dimensions","title":"Transform dimension numeric attributes to character — character_dimensions","text":"Transforms numeric type attributes dimensions character type. star_schema numerical data measurements situated facts. Numerical data dimensions usually codes, day, week, month year numbers. tools consider numerical data measurement, reason appropriate transform numerical data dimensions character data.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform dimension numeric attributes to character — character_dimensions","text":"","code":"character_dimensions(st, length_integers = list(), NA_replacement_value = NULL)  # S3 method for star_schema character_dimensions(st, length_integers = list(), NA_replacement_value = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform dimension numeric attributes to character — character_dimensions","text":"st star_schema object. length_integers list pairs name = length, attribute name length. NA_replacement_value string, value replace NA values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform dimension numeric attributes to character — character_dimensions","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform dimension numeric attributes to character — character_dimensions","text":"allows indicating amplitude fields, filling zeros left. useful make alphabetical order result correspond numerical order. also allows indicating literal used case numerical value defined. role playing dimension defined, transformation performed .","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/character_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform dimension numeric attributes to character — character_dimensions","text":"","code":"st <- star_schema(mrs_age_test, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   character_dimensions(length_integers = list(week = 2),                        NA_replacement_value = \"Unknown\")"},{"path":"https://josesamos.github.io/starschemar/reference/conform_all_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Conform all dimensions of a constellation — conform_all_dimensions","title":"Conform all dimensions of a constellation — conform_all_dimensions","text":"Conform dimensions name star schemas constellation. two dimensions name constellation, must conformed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/conform_all_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conform all dimensions of a constellation — conform_all_dimensions","text":"","code":"conform_all_dimensions(ct)"},{"path":"https://josesamos.github.io/starschemar/reference/conform_all_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conform all dimensions of a constellation — conform_all_dimensions","text":"ct constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/conform_all_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conform all dimensions of a constellation — conform_all_dimensions","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/conform_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Conform dimensions of given name — conform_dimensions","title":"Conform dimensions of given name — conform_dimensions","text":"two dimensions name constellation, must conformed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/conform_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conform dimensions of given name — conform_dimensions","text":"","code":"conform_dimensions(ct, name = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/conform_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conform dimensions of given name — conform_dimensions","text":"ct constellation object. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/conform_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conform dimensions of given name — conform_dimensions","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"constellation S3 class — constellation","title":"constellation S3 class — constellation","text":"Creates constellation object list star_schema objects. dimensions name star schemas conformable.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constellation S3 class — constellation","text":"","code":"constellation(lst, name = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constellation S3 class — constellation","text":"lst list star_schema objects. name string.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constellation S3 class — constellation","text":"constellation object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/constellation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constellation S3 class — constellation","text":"","code":"ct <- constellation(list(st_mrs_age, st_mrs_cause), name = \"mrs\")"},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_multistar.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a constellation as a multistar — constellation_as_multistar","title":"Export a constellation as a multistar — constellation_as_multistar","text":"refined format content facts dimensions, can obtain multistar. multistar distinguishes general conformed dimensions, dimension data. can contain multiple fact tables.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_multistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a constellation as a multistar — constellation_as_multistar","text":"","code":"constellation_as_multistar(ct)  # S3 method for constellation constellation_as_multistar(ct)"},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_multistar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a constellation as a multistar — constellation_as_multistar","text":"ct constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_multistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a constellation as a multistar — constellation_as_multistar","text":"multistar object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_multistar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a constellation as a multistar — constellation_as_multistar","text":"","code":"ms <- ct_mrs |>   constellation_as_multistar()"},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_tibble_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a constellation as a tibble list — constellation_as_tibble_list","title":"Export a constellation as a tibble list — constellation_as_tibble_list","text":"refined format content facts dimensions, can obtain tibble list . Role playing dimensions can optionally included.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_tibble_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a constellation as a tibble list — constellation_as_tibble_list","text":"","code":"constellation_as_tibble_list(ct, include_role_playing = FALSE)  # S3 method for constellation constellation_as_tibble_list(ct, include_role_playing = FALSE)"},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_tibble_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a constellation as a tibble list — constellation_as_tibble_list","text":"ct constellation object. include_role_playing boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_tibble_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a constellation as a tibble list — constellation_as_tibble_list","text":"list tibble objects.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/constellation_as_tibble_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a constellation as a tibble list — constellation_as_tibble_list","text":"","code":"tl <- ct_mrs |>   constellation_as_tibble_list()  tl <- ct_mrs |>   constellation_as_tibble_list(include_role_playing = TRUE)"},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Constellation for Mortality Reporting System — ct_mrs","title":"Constellation for Mortality Reporting System — ct_mrs","text":"Constellation Mortality Reporting System considering age cause classification.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constellation for Mortality Reporting System — ct_mrs","text":"","code":"ct_mrs"},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Constellation for Mortality Reporting System — ct_mrs","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constellation for Mortality Reporting System — ct_mrs","text":"","code":"# Defined by:  ct_mrs <- constellation(list(st_mrs_age, st_mrs_cause), name = \"mrs\")"},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Constellation for Mortality Reporting System Test — ct_mrs_test","title":"Constellation for Mortality Reporting System Test — ct_mrs_test","text":"Constellation Mortality Reporting System considering age cause classification data test.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constellation for Mortality Reporting System Test — ct_mrs_test","text":"","code":"ct_mrs_test"},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Constellation for Mortality Reporting System Test — ct_mrs_test","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ct_mrs_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constellation for Mortality Reporting System Test — ct_mrs_test","text":"","code":"# Defined by:  ct_mrs_test <-   constellation(list(st_mrs_age_test, st_mrs_cause_test), name = \"mrs_test\")"},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Define dimensions in a dimensional_model object — define_dimension","title":"Define dimensions in a dimensional_model object — define_dimension","text":"define dimension dimensional_model object, define name set attributes make .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define dimensions in a dimensional_model object — define_dimension","text":"","code":"define_dimension(st, name = NULL, attributes = NULL)  # S3 method for dimensional_model define_dimension(st, name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define dimensions in a dimensional_model object — define_dimension","text":"st dimensional_model object. name string, name dimension. attributes vector attribute names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define dimensions in a dimensional_model object — define_dimension","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define dimensions in a dimensional_model object — define_dimension","text":"get star schema (star_schema object) need flat table (implemented tibble) dimensional_model object. definition dimensions dimensional_model object made flat table column names. Using dput function can list column names flat table type names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/define_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define dimensions in a dimensional_model object — define_dimension","text":"","code":"# dput(colnames(mrs_age)) # # c( #   \"Reception Year\", #   \"Reception Week\", #   \"Reception Date\", #   \"Data Availability Year\", #   \"Data Availability Week\", #   \"Data Availability Date\", #   \"Year\", #   \"WEEK\", #   \"Week Ending Date\", #   \"REGION\", #   \"State\", #   \"City\", #   \"Age Range\", #   \"Deaths\" # )  dm <- dimensional_model() |>   define_dimension(name = \"When\",                    attributes = c(\"Week Ending Date\",                                   \"WEEK\",                                   \"Year\")) |>   define_dimension(name = \"When Available\",                    attributes = c(\"Data Availability Date\",                                   \"Data Availability Week\",                                   \"Data Availability Year\")) |>   define_dimension(name = \"Where\",                    attributes = c(\"REGION\",                                   \"State\",                                   \"City\")) |>   define_dimension(name = \"Who\",                    attributes = c(\"Age Range\"))"},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Define facts in a dimensional_model object — define_fact","title":"Define facts in a dimensional_model object — define_fact","text":"define facts dimensional_model object, essential data name set measurements can empty (explicit measurements). Associated measurement, aggregation function required, default SUM.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define facts in a dimensional_model object — define_fact","text":"","code":"define_fact(   st,   name = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = \"nrow_agg\" )  # S3 method for dimensional_model define_fact(   st,   name = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = \"nrow_agg\" )"},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define facts in a dimensional_model object — define_fact","text":"st dimensional_model object. name string, name fact. measures vector measure names. agg_functions vector aggregation function names. none indicated, default SUM. Additionally can MAX MIN. nrow_agg string, measurement name number rows aggregated.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define facts in a dimensional_model object — define_fact","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define facts in a dimensional_model object — define_fact","text":"get star schema (star_schema object) need flat table (implemented tibble) dimensional_model object. definition facts dimensional_model object made flat table column names. Using dput function can list column names flat table type names. Associated measurement aggregation function can SUM, MAX MIN. Mean considered among possible aggregation functions: reason calculating mean considering subsets data necessarily yield mean total data. additional measurement corresponding number aggregated rows always added , together SUM, allows us obtain mean needed.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/define_fact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define facts in a dimensional_model object — define_fact","text":"","code":"# dput(colnames(mrs_age)) # # c( #   \"Reception Year\", #   \"Reception Week\", #   \"Reception Date\", #   \"Data Availability Year\", #   \"Data Availability Week\", #   \"Data Availability Date\", #   \"Year\", #   \"WEEK\", #   \"Week Ending Date\", #   \"REGION\", #   \"State\", #   \"City\", #   \"Age Range\", #   \"Deaths\" # )  dm <- dimensional_model() |>   define_fact(     name = \"mrs_age\",     measures = c(\"Deaths\"),     agg_functions = c(\"SUM\"),     nrow_agg = \"nrow_agg\"   )  dm <- dimensional_model() |>   define_fact(     name = \"mrs_age\",     measures = c(\"Deaths\")   )  dm <- dimensional_model() |>   define_fact(name = \"Factless fact\")"},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Define selected dimensions — define_selected_dimensions","title":"Define selected dimensions — define_selected_dimensions","text":"Include selected dimensions selected attributes .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define selected dimensions — define_selected_dimensions","text":"","code":"define_selected_dimensions(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define selected dimensions — define_selected_dimensions","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define selected dimensions — define_selected_dimensions","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Define selected facts — define_selected_facts","title":"Define selected facts — define_selected_facts","text":"Measure names stored names columns aggregation functions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define selected facts — define_selected_facts","text":"","code":"define_selected_facts(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define selected facts — define_selected_facts","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/define_selected_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define selected facts — define_selected_facts","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete records — delete_records","title":"Delete records — delete_records","text":"Delete records primary key.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete records — delete_records","text":"","code":"delete_records(ft, ft_new, fk)"},{"path":"https://josesamos.github.io/starschemar/reference/delete_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete records — delete_records","text":"ft fact_table object. ft_new fact_table object. fk vector foreign key names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete records — delete_records","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_unused_foreign_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete unused foreign keys — delete_unused_foreign_keys","title":"Delete unused foreign keys — delete_unused_foreign_keys","text":"facts, remove foreign keys dimensions included result.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_unused_foreign_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete unused foreign keys — delete_unused_foreign_keys","text":"","code":"delete_unused_foreign_keys(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/delete_unused_foreign_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete unused foreign keys — delete_unused_foreign_keys","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/delete_unused_foreign_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete unused foreign keys — delete_unused_foreign_keys","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dereference_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Dereference a dimension — dereference_dimension","title":"Dereference a dimension — dereference_dimension","text":"Given dimension, transform fact table primary key dimension (foreign key fact table) replaced attributes dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dereference_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dereference a dimension — dereference_dimension","text":"","code":"dereference_dimension(ft, dimension, conversion = TRUE)"},{"path":"https://josesamos.github.io/starschemar/reference/dereference_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dereference a dimension — dereference_dimension","text":"ft fact_table object. dimension dimension_table object. conversion boolean, indicates whether attributes need transformed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dereference_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dereference a dimension — dereference_dimension","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_model.html","id":null,"dir":"Reference","previous_headings":"","what":"dimensional_model S3 class — dimensional_model","title":"dimensional_model S3 class — dimensional_model","text":"empty dimensional_model object created definition facts dimensions can added.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimensional_model S3 class — dimensional_model","text":"","code":"dimensional_model()"},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimensional_model S3 class — dimensional_model","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimensional_model S3 class — dimensional_model","text":"get star schema (star_schema object) need flat table (implemented tibble) dimensional_model object. definition facts dimensions dimensional_model object made flat table columns. attribute can appear definition.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimensional_model S3 class — dimensional_model","text":"","code":"dm <- dimensional_model()"},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_query.html","id":null,"dir":"Reference","previous_headings":"","what":"dimensional_query S3 class — dimensional_query","title":"dimensional_query S3 class — dimensional_query","text":"empty dimensional_query object created can select fact measures, dimension attributes filter dimension rows.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimensional_query S3 class — dimensional_query","text":"","code":"dimensional_query(ms = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimensional_query S3 class — dimensional_query","text":"ms multistar object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimensional_query S3 class — dimensional_query","text":"dimensional_query object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/dimensional_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimensional_query S3 class — dimensional_query","text":"","code":"# ms_mrs <- ct_mrs |> #  constellation_as_multistar()  # dq <- dimensional_query(ms_mrs)"},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Definition for Mortality Reporting System by Age — dm_mrs_age","title":"Star Definition for Mortality Reporting System by Age — dm_mrs_age","text":"Definition facts dimensions Mortality Reporting System considering age classification.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Definition for Mortality Reporting System by Age — dm_mrs_age","text":"","code":"dm_mrs_age"},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Definition for Mortality Reporting System by Age — dm_mrs_age","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Definition for Mortality Reporting System by Age — dm_mrs_age","text":"","code":"# Defined by:  dm_mrs_age <- dimensional_model() |>   define_fact(     name = \"mrs_age\",     measures = c(       \"Deaths\"     ),     agg_functions = c(       \"SUM\"     ),     nrow_agg = \"nrow_agg\"   ) |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   ) |>   define_dimension(     name = \"when_available\",     attributes = c(       \"Data Availability Date\",       \"Data Availability Week\",       \"Data Availability Year\"     )   ) |>   define_dimension(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ) |>   define_dimension(     name = \"who\",     attributes = c(       \"Age Range\"     )   )"},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Definition for Mortality Reporting System by Cause — dm_mrs_cause","title":"Star Definition for Mortality Reporting System by Cause — dm_mrs_cause","text":"Definition facts dimensions Mortality Reporting System considering cause classification.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Definition for Mortality Reporting System by Cause — dm_mrs_cause","text":"","code":"dm_mrs_cause"},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_cause.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Definition for Mortality Reporting System by Cause — dm_mrs_cause","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/dm_mrs_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Definition for Mortality Reporting System by Cause — dm_mrs_cause","text":"","code":"# Defined by:  dm_mrs_cause <- dimensional_model() |>   define_fact(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"Other Deaths\"     ),   ) |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   ) |>   define_dimension(     name = \"when_received\",     attributes = c(       \"Reception Date\",       \"Reception Week\",       \"Reception Year\"     )   ) |>   define_dimension(     name = \"when_available\",     attributes = c(       \"Data Availability Date\",       \"Data Availability Week\",       \"Data Availability Year\"     )   ) |>   define_dimension(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   )"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export selected attributes of a dimension — enrich_dimension_export","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"Export selected attributes dimension, without repeated combinations, enrich dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"","code":"enrich_dimension_export(st, name = NULL, attributes = NULL)  # S3 method for star_schema enrich_dimension_export(st, name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"st star_schema object. name string, name dimension. attributes vector attribute names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"tibble object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"role dimension exported, work associated role playing dimension.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export selected attributes of a dimension — enrich_dimension_export","text":"","code":"tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\"))"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import tibble to enrich a dimension — enrich_dimension_import","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"dimension star schema tibble attached. contains dimension attributes new attributes. values associated rows dimension included tibble, dimension enriched new attributes.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"","code":"enrich_dimension_import(st, name = NULL, tb)  # S3 method for star_schema enrich_dimension_import(st, name = NULL, tb)"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"st star_schema object. name string, name dimension. tb tibble object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"Role dimensions directly enriched. role playing dimension enriched, new attributes also added associated role dimensions.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import tibble to enrich a dimension — enrich_dimension_import","text":"","code":"tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\"))  # Add new columns with meaningful data (these are not), possibly exporting # data to a file, populating it and importing it. tb <- tibble::add_column(tb, x = \"x\", y = \"y\", z = \"z\")  st <- enrich_dimension_import(st_mrs_age, name = \"when_common\", tb)"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","title":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","text":"dimension star schema tibble attached. contains dimension attributes new attributes. values associated rows dimension included tibble, dimension enriched new attributes. function checks values instances. Returns dimension instances match imported data.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","text":"","code":"enrich_dimension_import_test(st, name = NULL, tb)  # S3 method for star_schema enrich_dimension_import_test(st, name = NULL, tb)"},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","text":"st star_schema object. name string, name dimension. tb tibble object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","text":"dimension object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/enrich_dimension_import_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import tibble to test to enrich a dimension — enrich_dimension_import_test","text":"","code":"tb <-   enrich_dimension_export(st_mrs_age,                           name = \"when_common\",                           attributes = c(\"week\", \"year\"))  # Add new columns with meaningful data (these are not), possibly exporting # data to a file, populating it and importing it. tb <- tibble::add_column(tb, x = \"x\", y = \"y\", z = \"z\")[-1, ]  tb2 <- enrich_dimension_import_test(st_mrs_age, name = \"when_common\", tb)"},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dimension — filter_dimension","title":"Filter dimension — filter_dimension","text":"Allows define selection conditions dimension rows.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dimension — filter_dimension","text":"","code":"filter_dimension(dq, name = NULL, ...)  # S3 method for dimensional_query filter_dimension(dq, name = NULL, ...)"},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dimension — filter_dimension","text":"dq dimensional_query object. name string, name dimension. ... Conditions, defined exactly way dplyr::filter.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dimension — filter_dimension","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter dimension — filter_dimension","text":"Conditions can defined attribute dimension (attributes selected query dimension). selection made based function dplyr::filter. Conditions defined exactly way function.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/filter_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter dimension — filter_dimension","text":"","code":"dq <- dimensional_query(ms_mrs) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Boston\")"},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter fact rows — filter_fact_rows","title":"Filter fact rows — filter_fact_rows","text":"Filter fact rows based dimension conditions star schema. Dimensions remain unchanged.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter fact rows — filter_fact_rows","text":"","code":"filter_fact_rows(st, name = NULL, ...)  # S3 method for star_schema filter_fact_rows(st, name = NULL, ...)"},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter fact rows — filter_fact_rows","text":"st star_schema object. name string, name dimension. ... Conditions, defined exactly way dplyr::filter.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter fact rows — filter_fact_rows","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter fact rows — filter_fact_rows","text":"Filtered rows can deleted using incremental_refresh_star_schema function.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/filter_fact_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter fact rows — filter_fact_rows","text":"","code":"st <- st_mrs_age |>   filter_fact_rows(name = \"when\", week <= \"03\") |>   filter_fact_rows(name = \"where\", city == \"Bridgeport\")  st2 <- st_mrs_age |>   incremental_refresh_star_schema(st, existing = \"delete\")"},{"path":"https://josesamos.github.io/starschemar/reference/filter_selected_instances.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter selected instances — filter_selected_instances","title":"Filter selected instances — filter_selected_instances","text":"dimensions instances include defined, value primary key. filtered facts dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_selected_instances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter selected instances — filter_selected_instances","text":"","code":"filter_selected_instances(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/filter_selected_instances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter selected instances — filter_selected_instances","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/filter_selected_instances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter selected instances — filter_selected_instances","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/find_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Find values in a dimension — find_values","title":"Find values in a dimension — find_values","text":"Find vector named values dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/find_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find values in a dimension — find_values","text":"","code":"find_values(dimension, values)"},{"path":"https://josesamos.github.io/starschemar/reference/find_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find values in a dimension — find_values","text":"dimension dimension_table object. values vector named values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/find_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find values in a dimension — find_values","text":"vector boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_datagov_uk.html","id":null,"dir":"Reference","previous_headings":"","what":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","title":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","text":"Estimation long-term health impacts exposure air pollution London 2016 2050.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_datagov_uk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","text":"","code":"ft_datagov_uk"},{"path":"https://josesamos.github.io/starschemar/reference/ft_datagov_uk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_datagov_uk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","text":"https://data.world/datagov-uk/fd864906-8456-46a8-9a01-0dcb2dbd87b9","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_datagov_uk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modelling the long-term health impacts of air pollution in London — ft_datagov_uk","text":"original dataset contains 68 files, corresponding 34 London areas 2 pollutants: pollutant zone indicated name file. file several sheets different variables. transformed flat table considering single variable defining area pollutant columns.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_london_boroughs.html","id":null,"dir":"Reference","previous_headings":"","what":"London Boroughs — ft_london_boroughs","title":"London Boroughs — ft_london_boroughs","text":"Classification London's boroughs zones sub-regions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_london_boroughs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"London Boroughs — ft_london_boroughs","text":"","code":"ft_london_boroughs"},{"path":"https://josesamos.github.io/starschemar/reference/ft_london_boroughs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"London Boroughs — ft_london_boroughs","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_london_boroughs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"London Boroughs — ft_london_boroughs","text":"https://en.wikipedia.org/wiki/List_of_sub-regions_used_in_the_London_Plan","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_city_county.html","id":null,"dir":"Reference","previous_headings":"","what":"USA City and County — ft_usa_city_county","title":"USA City and County — ft_usa_city_county","text":"City, state county US cities. includes appear Mortality Reporting System.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_city_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA City and County — ft_usa_city_county","text":"","code":"ft_usa_city_county"},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_city_county.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA City and County — ft_usa_city_county","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_city_county.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA City and County — ft_usa_city_county","text":"https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_states.html","id":null,"dir":"Reference","previous_headings":"","what":"USA States — ft_usa_states","title":"USA States — ft_usa_states","text":"Name abbreviation US states.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA States — ft_usa_states","text":"","code":"ft_usa_states"},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA States — ft_usa_states","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ft_usa_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA States — ft_usa_states","text":"https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_all_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all dimensions — get_all_dimensions","title":"Get all dimensions — get_all_dimensions","text":"Get dimensions star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_all_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all dimensions — get_all_dimensions","text":"","code":"get_all_dimensions(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_all_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all dimensions — get_all_dimensions","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_all_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all dimensions — get_all_dimensions","text":"list dimension_table objects.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_attribute_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attribute names — get_attribute_names","title":"Get attribute names — get_attribute_names","text":"Get names attributes used far definition.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_attribute_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attribute names — get_attribute_names","text":"","code":"get_attribute_names(dm)"},{"path":"https://josesamos.github.io/starschemar/reference/get_attribute_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attribute names — get_attribute_names","text":"dm dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_attribute_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attribute names — get_attribute_names","text":"vector attribute names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get conformed dimension — get_conformed_dimension","title":"Get conformed dimension — get_conformed_dimension","text":"Get conformed dimension constellation given name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get conformed dimension — get_conformed_dimension","text":"","code":"get_conformed_dimension(ct, name)  # S3 method for constellation get_conformed_dimension(ct, name)"},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get conformed dimension — get_conformed_dimension","text":"ct constellation object. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get conformed dimension — get_conformed_dimension","text":"dimension_table object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get conformed dimension — get_conformed_dimension","text":"","code":"d <- ct_mrs |>   get_conformed_dimension(\"when\")"},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get conformed dimension names — get_conformed_dimension_names","title":"Get conformed dimension names — get_conformed_dimension_names","text":"Get names conformed dimensions constellation.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get conformed dimension names — get_conformed_dimension_names","text":"","code":"get_conformed_dimension_names(ct)  # S3 method for constellation get_conformed_dimension_names(ct)"},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get conformed dimension names — get_conformed_dimension_names","text":"ct constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get conformed dimension names — get_conformed_dimension_names","text":"vector dimension names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get conformed dimension names — get_conformed_dimension_names","text":"","code":"d <- ct_mrs |>   get_conformed_dimension_names()"},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names_st.html","id":null,"dir":"Reference","previous_headings":"","what":"Get conformed dimension names — get_conformed_dimension_names_st","title":"Get conformed dimension names — get_conformed_dimension_names_st","text":"Get names star schema conformed dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names_st.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get conformed dimension names — get_conformed_dimension_names_st","text":"","code":"get_conformed_dimension_names_st(st)  # S3 method for star_schema get_conformed_dimension_names_st(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names_st.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get conformed dimension names — get_conformed_dimension_names_st","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_conformed_dimension_names_st.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get conformed dimension names — get_conformed_dimension_names_st","text":"vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimension — get_dimension","title":"Get dimension — get_dimension","text":"Get dimension star schema given name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimension — get_dimension","text":"","code":"get_dimension(st, name)  # S3 method for star_schema get_dimension(st, name)"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimension — get_dimension","text":"st star_schema object. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimension — get_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get dimension — get_dimension","text":"Role dimensions can obtained role playing dimensions. Role dimensions get instances role playing dimensions.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dimension — get_dimension","text":"","code":"d <- st_mrs_age |>   get_dimension(\"when\")"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_attribute_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimension attribute names — get_dimension_attribute_names","title":"Get dimension attribute names — get_dimension_attribute_names","text":"Get name attributes dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_attribute_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimension attribute names — get_dimension_attribute_names","text":"","code":"get_dimension_attribute_names(st, name)  # S3 method for star_schema get_dimension_attribute_names(st, name)"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_attribute_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimension attribute names — get_dimension_attribute_names","text":"st star_schema object. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_attribute_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimension attribute names — get_dimension_attribute_names","text":"vector attribute names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_attribute_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dimension attribute names — get_dimension_attribute_names","text":"","code":"attribute_names <-   st_mrs_age |> get_dimension_attribute_names(\"when\")"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the dimension name — get_dimension_name","title":"Get the dimension name — get_dimension_name","text":"Returns name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the dimension name — get_dimension_name","text":"","code":"get_dimension_name(dimension)  # S3 method for dimension_table get_dimension_name(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the dimension name — get_dimension_name","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the dimension name — get_dimension_name","text":"string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the dimension name — get_dimension_name","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimension names — get_dimension_names","title":"Get dimension names — get_dimension_names","text":"Get names dimensions star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimension names — get_dimension_names","text":"","code":"get_dimension_names(st)  # S3 method for star_schema get_dimension_names(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimension names — get_dimension_names","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimension names — get_dimension_names","text":"vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get dimension names — get_dimension_names","text":"Role playing dimensions considered.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dimension names — get_dimension_names","text":"","code":"dn <- st_mrs_age |>   get_dimension_names()"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the dimension type — get_dimension_type","title":"Get the dimension type — get_dimension_type","text":"Returns type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the dimension type — get_dimension_type","text":"","code":"get_dimension_type(dimension)  # S3 method for dimension_table get_dimension_type(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the dimension type — get_dimension_type","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the dimension type — get_dimension_type","text":"string, type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_dimension_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the dimension type — get_dimension_type","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_fact_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fact name — get_fact_name","title":"Get fact name — get_fact_name","text":"Get name fact table.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_fact_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fact name — get_fact_name","text":"","code":"get_fact_name(st)  # S3 method for star_schema get_fact_name(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_fact_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fact name — get_fact_name","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_fact_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fact name — get_fact_name","text":"string, name fact table.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_measure_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get measure names — get_measure_names","title":"Get measure names — get_measure_names","text":"Get name measures facts.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_measure_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get measure names — get_measure_names","text":"","code":"get_measure_names(st)  # S3 method for star_schema get_measure_names(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_measure_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get measure names — get_measure_names","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_measure_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get measure names — get_measure_names","text":"vector measure names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_measure_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get measure names — get_measure_names","text":"","code":"measure_names <-   st_mrs_age |> get_measure_names()"},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_role_playing_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the role playing dimensions — get_name_of_role_playing_dimensions","title":"Get the name of the role playing dimensions — get_name_of_role_playing_dimensions","text":"Get name role playing dimensions","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_role_playing_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the role playing dimensions — get_name_of_role_playing_dimensions","text":"","code":"get_name_of_role_playing_dimensions(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_role_playing_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the role playing dimensions — get_name_of_role_playing_dimensions","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_role_playing_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the role playing dimensions — get_name_of_role_playing_dimensions","text":"vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_uniquely_implemented_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","title":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","text":"Get list dimension names uniquely implemented.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_uniquely_implemented_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","text":"","code":"get_name_of_uniquely_implemented_dimensions(st)"},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_uniquely_implemented_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_uniquely_implemented_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","text":"vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_name_of_uniquely_implemented_dimensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get name of uniquely implemented dimensions — get_name_of_uniquely_implemented_dimensions","text":"role dimensions share role playing dimension, one considered. Role playing dimensions considered.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_dimension_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get role dimension names associated to a role-playing dimension — get_role_dimension_names","title":"Get role dimension names associated to a role-playing dimension — get_role_dimension_names","text":"role dimension name role-playing dimension associated. function allows us obtain role dimension names role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_dimension_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get role dimension names associated to a role-playing dimension — get_role_dimension_names","text":"","code":"get_role_dimension_names(st, name)"},{"path":"https://josesamos.github.io/starschemar/reference/get_role_dimension_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get role dimension names associated to a role-playing dimension — get_role_dimension_names","text":"st star_schema object. name string, dimension name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_dimension_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get role dimension names associated to a role-playing dimension — get_role_dimension_names","text":"vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_playing_dimension_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the associated role-playing dimension name — get_role_playing_dimension_name","title":"Get the associated role-playing dimension name — get_role_playing_dimension_name","text":"role dimension name role-playing dimension associated. function allows us obtain name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_playing_dimension_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the associated role-playing dimension name — get_role_playing_dimension_name","text":"","code":"get_role_playing_dimension_name(dimension)  # S3 method for dimension_table get_role_playing_dimension_name(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/get_role_playing_dimension_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the associated role-playing dimension name — get_role_playing_dimension_name","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_playing_dimension_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the associated role-playing dimension name — get_role_playing_dimension_name","text":"string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_role_playing_dimension_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the associated role-playing dimension name — get_role_playing_dimension_name","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get star schema — get_star_schema","title":"Get star schema — get_star_schema","text":"Get star schema constellation given name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get star schema — get_star_schema","text":"","code":"get_star_schema(ct, name)  # S3 method for constellation get_star_schema(ct, name)"},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get star schema — get_star_schema","text":"ct constellation object. name string, name star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get star schema — get_star_schema","text":"dimension_table object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get star schema — get_star_schema","text":"","code":"d <- ct_mrs |>   get_star_schema(\"mrs_age\")"},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get star schema names — get_star_schema_names","title":"Get star schema names — get_star_schema_names","text":"Get names star schemas constellation.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get star schema names — get_star_schema_names","text":"","code":"get_star_schema_names(ct)  # S3 method for constellation get_star_schema_names(ct)"},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get star schema names — get_star_schema_names","text":"ct constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get star schema names — get_star_schema_names","text":"vector star schema names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/get_star_schema_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get star schema names — get_star_schema_names","text":"","code":"d <- ct_mrs |>   get_star_schema_names()"},{"path":"https://josesamos.github.io/starschemar/reference/group_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Group facts — group_facts","title":"Group facts — group_facts","text":"external keys possibly replaced, group rows facts.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group facts — group_facts","text":"","code":"group_facts(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/group_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group facts — group_facts","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group facts — group_facts","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Group records — group_records","title":"Group records — group_records","text":"Group records primary key.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group records — group_records","text":"","code":"group_records(ft, ft_new, fk)"},{"path":"https://josesamos.github.io/starschemar/reference/group_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group records — group_records","text":"ft fact_table object. ft_new fact_table object. fk vector foreign key names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group records — group_records","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Group the records in the table — group_table","title":"Group the records in the table — group_table","text":"Group records table using aggregation functions measurements.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group the records in the table — group_table","text":"","code":"group_table(ft)"},{"path":"https://josesamos.github.io/starschemar/reference/group_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group the records in the table — group_table","text":"ft fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/group_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group the records in the table — group_table","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/homogenize.html","id":null,"dir":"Reference","previous_headings":"","what":"Homogenize a dimension — homogenize","title":"Homogenize a dimension — homogenize","text":"merge dimensions, must first homogenized: generated primary key must removed , necessary, attributes (columns) must renamed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/homogenize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Homogenize a dimension — homogenize","text":"","code":"homogenize(dimension, attributes = NULL)  # S3 method for dimension_table homogenize(dimension, attributes = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/homogenize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Homogenize a dimension — homogenize","text":"dimension dimension_table object. attributes vector attribute names dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/homogenize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Homogenize a dimension — homogenize","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"Incrementally refresh star schema constellation content new star schema integrated first.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"","code":"incremental_refresh_constellation(ct, st, existing = \"ignore\")  # S3 method for constellation incremental_refresh_constellation(ct, st, existing = \"ignore\")"},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"ct constellation object. st star_schema object. existing string, operation performed records fact table whose keys match.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"dimensions integrated, records fact table whose keys match new ones, new ones can ignored, can replaced new ones, can grouped using aggregation functions, can deleted. Therefore, possible values existing parameter : \"ignore\", \"replace\", \"group\" \"delete\".","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_constellation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Incrementally refresh a constellation with a star schema — incremental_refresh_constellation","text":"","code":"ct <- ct_mrs |>   incremental_refresh_constellation(st_mrs_age_w10, existing = \"replace\")  ct <- ct_mrs |>   incremental_refresh_constellation(st_mrs_cause_w10, existing = \"group\")"},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Incrementally refresh a dimension with another — incremental_refresh_dimension","title":"Incrementally refresh a dimension with another — incremental_refresh_dimension","text":"Incrementally refresh dimension content new one integrated first.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incrementally refresh a dimension with another — incremental_refresh_dimension","text":"","code":"incremental_refresh_dimension(dimension, dimension_new)  # S3 method for dimension_table incremental_refresh_dimension(dimension, dimension_new)"},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incrementally refresh a dimension with another — incremental_refresh_dimension","text":"dimension dimension_table object. dimension_new dimension_table object, possibly new data.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incrementally refresh a dimension with another — incremental_refresh_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Incrementally refresh a fact table with another — incremental_refresh_fact","title":"Incrementally refresh a fact table with another — incremental_refresh_fact","text":"Incrementally refresh fact table content new one integrated first.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incrementally refresh a fact table with another — incremental_refresh_fact","text":"","code":"incremental_refresh_fact(ft, ft_new, existing)  # S3 method for fact_table incremental_refresh_fact(ft, ft_new, existing)"},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incrementally refresh a fact table with another — incremental_refresh_fact","text":"ft fact_table object. ft_new fact_table object, possibly new data. existing string, operation performed records whose keys match.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incrementally refresh a fact table with another — incremental_refresh_fact","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_fact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incrementally refresh a fact table with another — incremental_refresh_fact","text":"records whose keys match new ones, can ignore, replace group .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"Incrementally refresh star schema content new one integrated first.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"","code":"incremental_refresh_star_schema(st, st_new, existing = \"ignore\")  # S3 method for star_schema incremental_refresh_star_schema(st, st_new, existing = \"ignore\")"},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"st star_schema object. st_new star_schema object. existing string, operation performed records fact table whose keys match.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"dimensions integrated, records fact table whose keys match new ones, new ones can ignored, can replaced new ones, can grouped using aggregation functions, can deleted. Therefore, possible values existing parameter : \"ignore\", \"replace\", \"group\" \"delete\".","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/incremental_refresh_star_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Incrementally refresh a star schema with another — incremental_refresh_star_schema","text":"","code":"st <- st_mrs_age |>   incremental_refresh_star_schema(st_mrs_age_w10, existing = \"replace\")  st <- st_mrs_cause |>   incremental_refresh_star_schema(st_mrs_cause_w10, existing = \"group\")"},{"path":"https://josesamos.github.io/starschemar/reference/is_conformed_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it conformed dimension? — is_conformed_dimension","title":"Is it conformed dimension? — is_conformed_dimension","text":"Indicates means boolean dimension conformed dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_conformed_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it conformed dimension? — is_conformed_dimension","text":"","code":"is_conformed_dimension(dimension)  # S3 method for dimension_table is_conformed_dimension(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/is_conformed_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it conformed dimension? — is_conformed_dimension","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_conformed_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it conformed dimension? — is_conformed_dimension","text":"boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_conformed_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is it conformed dimension? — is_conformed_dimension","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_dimension_in_updates.html","id":null,"dir":"Reference","previous_headings":"","what":"Is dimension in set of updates? — is_dimension_in_updates","title":"Is dimension in set of updates? — is_dimension_in_updates","text":"Given set dimension record update operations name dimension, checks update operation perform dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_dimension_in_updates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is dimension in set of updates? — is_dimension_in_updates","text":"","code":"is_dimension_in_updates(updates, name)  # S3 method for record_update_set is_dimension_in_updates(updates, name)"},{"path":"https://josesamos.github.io/starschemar/reference/is_dimension_in_updates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is dimension in set of updates? — is_dimension_in_updates","text":"updates record_update_set object, list dimension record update operations. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_dimension_in_updates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is dimension in set of updates? — is_dimension_in_updates","text":"boolean, indicating dimension appears list update operations.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it role dimension? — is_role_dimension","title":"Is it role dimension? — is_role_dimension","text":"Indicates means boolean dimension role dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it role dimension? — is_role_dimension","text":"","code":"is_role_dimension(dimension)  # S3 method for dimension_table is_role_dimension(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/is_role_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it role dimension? — is_role_dimension","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it role dimension? — is_role_dimension","text":"boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is it role dimension? — is_role_dimension","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_playing_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it role-playing dimension? — is_role_playing_dimension","title":"Is it role-playing dimension? — is_role_playing_dimension","text":"Indicates means boolean dimension role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_playing_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it role-playing dimension? — is_role_playing_dimension","text":"","code":"is_role_playing_dimension(dimension)  # S3 method for dimension_table is_role_playing_dimension(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/is_role_playing_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it role-playing dimension? — is_role_playing_dimension","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_playing_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it role-playing dimension? — is_role_playing_dimension","text":"boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/is_role_playing_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is it role-playing dimension? — is_role_playing_dimension","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dimension record equal to another — match_records","title":"Make a dimension record equal to another — match_records","text":"dimension, given primary key two records, adds update set updates modifies combination values rest attributes first record become second.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dimension record equal to another — match_records","text":"","code":"match_records(updates, dimension, old, new)  # S3 method for record_update_set match_records(updates, dimension, old, new)"},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dimension record equal to another — match_records","text":"updates record_update_set object. dimension dimension_table object, dimension update. old number, primary key record update. new number, primary key record values taken.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dimension record equal to another — match_records","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a dimension record equal to another — match_records","text":"Primary keys used get combination values easily. update defined exclusively rest values. especially useful detected two records one: Two generated due data error.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/match_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a dimension record equal to another — match_records","text":"","code":"dim_names <- st_mrs_age |>     get_dimension_names()  where <- st_mrs_age |>   get_dimension(\"where\")  # head(where, 2)  updates <- record_update_set() |>   match_records(dimension = where,                 old = 1,                 new = 2)"},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"Given list dimension record update operations, applied conformed dimensions constellation object. Update operations must defined set functions available purpose.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"","code":"modify_conformed_dimension_records(ct, updates = record_update_set())  # S3 method for constellation modify_conformed_dimension_records(ct, updates = record_update_set())"},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"ct constellation object. updates record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"dimensions defined, records can detected must modified part data cleaning process: frequently unify two records due data errors missing data. immediate facts must adapted new set dimension instances. operation allows us unify records automatically propagate modifications facts star schemas.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/modify_conformed_dimension_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimension record update operations to conformed dimensions — modify_conformed_dimension_records","text":"","code":"ct <- ct_mrs |>   modify_conformed_dimension_records(updates_st_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimension record update operations — modify_dimension_records","title":"Apply dimension record update operations — modify_dimension_records","text":"Given list dimension record update operations, applied dimensions star_schema object. Update operations must defined set functions available purpose.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimension record update operations — modify_dimension_records","text":"","code":"modify_dimension_records(st, updates = record_update_set())  # S3 method for star_schema modify_dimension_records(st, updates = record_update_set())"},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimension record update operations — modify_dimension_records","text":"st star_schema object. updates record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimension record update operations — modify_dimension_records","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply dimension record update operations — modify_dimension_records","text":"dimensions defined, records can detected must modified part data cleaning process: frequently unify two records due data errors missing data. immediate facts must adapted new set dimension instances. operation allows us unify records automatically propagate modifications facts. list update operations can applied repeatedly new data received incorporated star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/modify_dimension_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimension record update operations — modify_dimension_records","text":"","code":"st <- st_mrs_age |>   modify_dimension_records(updates_st_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/reference/mrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System — mrs","title":"Mortality Reporting System — mrs","text":"Selection data 122 Cities Mortality Reporting System, first 11 weeks 1962.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System — mrs","text":"","code":"mrs"},{"path":"https://josesamos.github.io/starschemar/reference/mrs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System — mrs","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System — mrs","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System — mrs","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age — mrs_age","title":"Mortality Reporting System by Age — mrs_age","text":"Selection data 122 Cities Mortality Reporting System age group, first 9 weeks 1962.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age — mrs_age","text":"","code":"mrs_age"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age — mrs_age","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age — mrs_age","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age — mrs_age","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age Test — mrs_age_test","title":"Mortality Reporting System by Age Test — mrs_age_test","text":"Selection data 2 Cities Mortality Reporting System age group, first 3 weeks 1962.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age Test — mrs_age_test","text":"","code":"mrs_age_test"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age Test — mrs_age_test","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age Test — mrs_age_test","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age Test — mrs_age_test","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w10.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","title":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","text":"Selection data 122 Cities Mortality Reporting System age group, week 10 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","text":"","code":"mrs_age_w10"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age for Week 10 — mrs_age_w10","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w11.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","title":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","text":"Selection data 122 Cities Mortality Reporting System age group, week 11 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","text":"","code":"mrs_age_w11"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w11.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w11.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w11.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age for Week 11 — mrs_age_w11","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","title":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","text":"Selection data 3 Cities Mortality Reporting System age group, week 4 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","text":"","code":"mrs_age_w_test"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_age_w_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age for Week Test — mrs_age_w_test","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause — mrs_cause","title":"Mortality Reporting System by Cause — mrs_cause","text":"Selection data 122 Cities Mortality Reporting System cause, first 9 weeks 1962.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause — mrs_cause","text":"","code":"mrs_cause"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause — mrs_cause","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause — mrs_cause","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause — mrs_cause","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause Test — mrs_cause_test","title":"Mortality Reporting System by Cause Test — mrs_cause_test","text":"Selection data 2 Cities Mortality Reporting System cause, first 3 weeks 1962.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause Test — mrs_cause_test","text":"","code":"mrs_cause_test"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause Test — mrs_cause_test","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause Test — mrs_cause_test","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause Test — mrs_cause_test","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w10.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","title":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","text":"Selection data 122 Cities Mortality Reporting System cause, week 10 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","text":"","code":"mrs_cause_w10"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause for Week 10 — mrs_cause_w10","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w11.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","title":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","text":"Selection data 122 Cities Mortality Reporting System cause, week 11 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","text":"","code":"mrs_cause_w11"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w11.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w11.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w11.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause for Week 11 — mrs_cause_w11","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","title":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","text":"Selection data 3 Cities Mortality Reporting System cause, week 4 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","text":"","code":"mrs_cause_w_test"},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/starschemar/reference/mrs_cause_w_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause for Week Test — mrs_cause_w_test","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Multistar for Mortality Reporting System — ms_mrs","title":"Multistar for Mortality Reporting System — ms_mrs","text":"Multistar Mortality Reporting System considering age cause classification. result obtained vignette.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multistar for Mortality Reporting System — ms_mrs","text":"","code":"ms_mrs"},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multistar for Mortality Reporting System — ms_mrs","text":"multistar object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multistar for Mortality Reporting System — ms_mrs","text":"","code":"# Defined by:  ms_mrs <- ct_mrs |>   constellation_as_multistar()"},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Multistar for Mortality Reporting System Test — ms_mrs_test","title":"Multistar for Mortality Reporting System Test — ms_mrs_test","text":"Multistar Mortality Reporting System considering age cause classification data test.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multistar for Mortality Reporting System Test — ms_mrs_test","text":"","code":"ms_mrs_test"},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multistar for Mortality Reporting System Test — ms_mrs_test","text":"multistar object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/ms_mrs_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multistar for Mortality Reporting System Test — ms_mrs_test","text":"","code":"# Defined by:  ms_mrs_test <- ct_mrs_test |>   constellation_as_multistar()"},{"path":"https://josesamos.github.io/starschemar/reference/multistar_as_flat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a multistar as a flat table — multistar_as_flat_table","title":"Export a multistar as a flat table — multistar_as_flat_table","text":"can obtain flat table, implemented using tibble, multistar (can result query). one fact table, necessary provide name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/multistar_as_flat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a multistar as a flat table — multistar_as_flat_table","text":"","code":"multistar_as_flat_table(ms, fact = NULL)  # S3 method for multistar multistar_as_flat_table(ms, fact = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/multistar_as_flat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a multistar as a flat table — multistar_as_flat_table","text":"ms multistar object. fact string, name fact.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/multistar_as_flat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a multistar as a flat table — multistar_as_flat_table","text":"tibble.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/multistar_as_flat_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a multistar as a flat table — multistar_as_flat_table","text":"","code":"ft <- ms_mrs |>   multistar_as_flat_table(fact = \"mrs_age\")  ms <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                    attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\")) |>   select_fact(name = \"mrs_age\",               measures = c(\"n_deaths\")) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Boston\") |>   run_query()  ft <- ms |>   multistar_as_flat_table()"},{"path":"https://josesamos.github.io/starschemar/reference/new_constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"constellation S3 class — new_constellation","title":"constellation S3 class — new_constellation","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constellation S3 class — new_constellation","text":"","code":"new_constellation(lst = list(), name = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/new_constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constellation S3 class — new_constellation","text":"lst list star_schema objects. name string.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constellation S3 class — new_constellation","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"dimension_table S3 class — new_dimension_table","title":"dimension_table S3 class — new_dimension_table","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimension_table S3 class — new_dimension_table","text":"","code":"new_dimension_table(ft = tibble::tibble(), name = NULL, type = \"general\")"},{"path":"https://josesamos.github.io/starschemar/reference/new_dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimension_table S3 class — new_dimension_table","text":"ft tibble, contains dimension. name string, name dimension. type string, type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimension_table S3 class — new_dimension_table","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimension_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimension_table S3 class — new_dimension_table","text":"Types considered: (general), (role, role_playing), (conformed).","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_model.html","id":null,"dir":"Reference","previous_headings":"","what":"dimensional_model S3 class — new_dimensional_model","title":"dimensional_model S3 class — new_dimensional_model","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimensional_model S3 class — new_dimensional_model","text":"","code":"new_dimensional_model()"},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimensional_model S3 class — new_dimensional_model","text":"dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_query.html","id":null,"dir":"Reference","previous_headings":"","what":"dimensional_query S3 class — new_dimensional_query","title":"dimensional_query S3 class — new_dimensional_query","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimensional_query S3 class — new_dimensional_query","text":"","code":"new_dimensional_query(ms = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/new_dimensional_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimensional_query S3 class — new_dimensional_query","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_fact_table.html","id":null,"dir":"Reference","previous_headings":"","what":"fact_table S3 class — new_fact_table","title":"fact_table S3 class — new_fact_table","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_fact_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fact_table S3 class — new_fact_table","text":"","code":"new_fact_table(   ft = tibble::tibble(),   name = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = NULL )"},{"path":"https://josesamos.github.io/starschemar/reference/new_fact_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fact_table S3 class — new_fact_table","text":"ft tibble, contains fact table. name string, name fact. measures vector measurement names. agg_functions vector aggregation function names. nrow_agg string, measurement name number rows aggregated.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_fact_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fact_table S3 class — new_fact_table","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_multistar.html","id":null,"dir":"Reference","previous_headings":"","what":"multistar S3 class — new_multistar","title":"multistar S3 class — new_multistar","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_multistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multistar S3 class — new_multistar","text":"","code":"new_multistar(fl = list(), dl = list())"},{"path":"https://josesamos.github.io/starschemar/reference/new_multistar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multistar S3 class — new_multistar","text":"fl fact_table list. dl dimension_table list.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_multistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multistar S3 class — new_multistar","text":"multistar object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_multistar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"multistar S3 class — new_multistar","text":"distinguishes general conformed dimensions, dimension data. can contain multiple fact tables.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update.html","id":null,"dir":"Reference","previous_headings":"","what":"record_update S3 class — new_record_update","title":"record_update S3 class — new_record_update","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"record_update S3 class — new_record_update","text":"","code":"new_record_update(dimension, old, new)"},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"record_update S3 class — new_record_update","text":"record_update object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"record_update S3 class — new_record_update","text":"dimension, relates old record field values new values replace .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update_set.html","id":null,"dir":"Reference","previous_headings":"","what":"record_update_set S3 class — new_record_update_set","title":"record_update_set S3 class — new_record_update_set","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"record_update_set S3 class — new_record_update_set","text":"","code":"new_record_update_set()"},{"path":"https://josesamos.github.io/starschemar/reference/new_record_update_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"record_update_set S3 class — new_record_update_set","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"star_schema S3 class — new_star_schema","title":"star_schema S3 class — new_star_schema","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"star_schema S3 class — new_star_schema","text":"","code":"new_star_schema(ft = tibble::tibble(), sd = dimensional_model())"},{"path":"https://josesamos.github.io/starschemar/reference/new_star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"star_schema S3 class — new_star_schema","text":"ft tibble, implements flat table. sd dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/new_star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"star_schema S3 class — new_star_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/prepare_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a tibble to join — prepare_join","title":"Transform a tibble to join — prepare_join","text":"Transform fields tibble character type replace NA specific value.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/prepare_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a tibble to join — prepare_join","text":"","code":"prepare_join(tb)"},{"path":"https://josesamos.github.io/starschemar/reference/prepare_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a tibble to join — prepare_join","text":"tb tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/prepare_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a tibble to join — prepare_join","text":"tibble.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"Purge dimensions in a constellation — purge_dimensions_constellation","title":"Purge dimensions in a constellation — purge_dimensions_constellation","text":"Delete instances dimensions related facts constellation.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purge dimensions in a constellation — purge_dimensions_constellation","text":"","code":"purge_dimensions_constellation(ct)  # S3 method for constellation purge_dimensions_constellation(ct)"},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purge dimensions in a constellation — purge_dimensions_constellation","text":"ct constellation object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Purge dimensions in a constellation — purge_dimensions_constellation","text":"constellation object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_constellation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Purge dimensions in a constellation — purge_dimensions_constellation","text":"","code":"ct <- ct_mrs |>   purge_dimensions_constellation()"},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Purge dimensions — purge_dimensions_star_schema","title":"Purge dimensions — purge_dimensions_star_schema","text":"Delete instances dimensions related facts star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purge dimensions — purge_dimensions_star_schema","text":"","code":"purge_dimensions_star_schema(st)  # S3 method for star_schema purge_dimensions_star_schema(st)"},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purge dimensions — purge_dimensions_star_schema","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Purge dimensions — purge_dimensions_star_schema","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/purge_dimensions_star_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Purge dimensions — purge_dimensions_star_schema","text":"","code":"st <- st_mrs_age |>   purge_dimensions_star_schema()"},{"path":"https://josesamos.github.io/starschemar/reference/record_update_set.html","id":null,"dir":"Reference","previous_headings":"","what":"record_update_set S3 class — record_update_set","title":"record_update_set S3 class — record_update_set","text":"record_update_set object created. Stores updates dimension records.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/record_update_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"record_update_set S3 class — record_update_set","text":"","code":"record_update_set()"},{"path":"https://josesamos.github.io/starschemar/reference/record_update_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"record_update_set S3 class — record_update_set","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/record_update_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"record_update_set S3 class — record_update_set","text":"update made dimension name, old value set, new value set. update applied, dimension records combination old values modified new values provided.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/record_update_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"record_update_set S3 class — record_update_set","text":"","code":"updates <- record_update_set()"},{"path":"https://josesamos.github.io/starschemar/reference/reference_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference a dimension — reference_dimension","title":"Reference a dimension — reference_dimension","text":"Given dimension, transform fact table attributes dimension indicated parameter, fact table, replaced attributes dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/reference_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference a dimension — reference_dimension","text":"","code":"reference_dimension(ft, dimension, attributes, conversion = TRUE)"},{"path":"https://josesamos.github.io/starschemar/reference/reference_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reference a dimension — reference_dimension","text":"ft fact_table object. dimension dimension_table object. attributes vector attribute names, attributes used reference dimension. conversion boolean, indicates whether attributes need transformed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/reference_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reference a dimension — reference_dimension","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/reference_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reference a dimension — reference_dimension","text":"used replace set attributes fact table generated key dimension. necessary, also used inverse operation: replace generated key rest attributes (dereference dimension).","code":""},{"path":"https://josesamos.github.io/starschemar/reference/remove_duplicate_dimension_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicate dimension rows — remove_duplicate_dimension_rows","title":"Remove duplicate dimension rows — remove_duplicate_dimension_rows","text":"selecting columns dimensions, may rows duplicate values. eliminate duplicates adapt facts new dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/remove_duplicate_dimension_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicate dimension rows — remove_duplicate_dimension_rows","text":"","code":"remove_duplicate_dimension_rows(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/remove_duplicate_dimension_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicate dimension rows — remove_duplicate_dimension_rows","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/remove_duplicate_dimension_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicate dimension rows — remove_duplicate_dimension_rows","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename dimension — rename_dimension","title":"Rename dimension — rename_dimension","text":"Set new name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename dimension — rename_dimension","text":"","code":"rename_dimension(st, name, new_name)  # S3 method for star_schema rename_dimension(st, name, new_name)"},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename dimension — rename_dimension","text":"st star_schema object. name string, name dimension. new_name string, new name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename dimension — rename_dimension","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename dimension — rename_dimension","text":"","code":"st <- st_mrs_age |>   rename_dimension(name = \"when\", new_name = \"when_happened\")"},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename dimension attributes — rename_dimension_attributes","title":"Rename dimension attributes — rename_dimension_attributes","text":"Set new names attributes dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename dimension attributes — rename_dimension_attributes","text":"","code":"rename_dimension_attributes(st, name, attributes, new_names)  # S3 method for star_schema rename_dimension_attributes(st, name, attributes, new_names)"},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename dimension attributes — rename_dimension_attributes","text":"st star_schema object. name string, name dimension. attributes vector attribute names. new_names vector new attribute names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename dimension attributes — rename_dimension_attributes","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/rename_dimension_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename dimension attributes — rename_dimension_attributes","text":"","code":"st <-   st_mrs_age |> rename_dimension_attributes(     name = \"when\",     attributes = c(\"week\", \"year\"),     new_names = c(\"w\", \"y\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/rename_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename fact — rename_fact","title":"Rename fact — rename_fact","text":"Set new name facts.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename fact — rename_fact","text":"","code":"rename_fact(st, name)  # S3 method for star_schema rename_fact(st, name)"},{"path":"https://josesamos.github.io/starschemar/reference/rename_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename fact — rename_fact","text":"st star_schema object. name string, new name fact.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename fact — rename_fact","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/rename_fact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename fact — rename_fact","text":"","code":"st <- st_mrs_age |> rename_fact(\"age\")"},{"path":"https://josesamos.github.io/starschemar/reference/rename_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename measures — rename_measures","title":"Rename measures — rename_measures","text":"Set new names measures facts.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename measures — rename_measures","text":"","code":"rename_measures(st, measures, new_names)  # S3 method for star_schema rename_measures(st, measures, new_names)"},{"path":"https://josesamos.github.io/starschemar/reference/rename_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename measures — rename_measures","text":"st star_schema object. measures vector measure names. new_names vector new measure names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/rename_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename measures — rename_measures","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/rename_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename measures — rename_measures","text":"","code":"st <-   st_mrs_age |> rename_measures(measures = c(\"deaths\"),                                  new_names = c(\"n_deaths\"))"},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a star schema dimension — replace_dimension","title":"Replace a star schema dimension — replace_dimension","text":"Replace dimension another contains instances first , possibly, , star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a star schema dimension — replace_dimension","text":"","code":"replace_dimension(st, name, dimension)  # S3 method for star_schema replace_dimension(st, name, dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a star schema dimension — replace_dimension","text":"st star_schema object. name string, name dimension. dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a star schema dimension — replace_dimension","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension_in_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace in facts a star schema dimension — replace_dimension_in_facts","title":"Replace in facts a star schema dimension — replace_dimension_in_facts","text":"operation can due integrating several dimensions constellation incremental update dimension (indicated boolean parameter). new dimension replaces facts original dimension, whose name indicated.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension_in_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace in facts a star schema dimension — replace_dimension_in_facts","text":"","code":"replace_dimension_in_facts(st, name, dimension, set_type_conformed = FALSE)  # S3 method for star_schema replace_dimension_in_facts(st, name, dimension, set_type_conformed = FALSE)"},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension_in_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace in facts a star schema dimension — replace_dimension_in_facts","text":"st star_schema object. name string, name dimension. dimension dimension_table object. set_type_conformed boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_dimension_in_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace in facts a star schema dimension — replace_dimension_in_facts","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_general_dimension_in_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace in facts a star schema general dimension — replace_general_dimension_in_facts","title":"Replace in facts a star schema general dimension — replace_general_dimension_in_facts","text":"Replace facts star schema general dimension","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_general_dimension_in_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace in facts a star schema general dimension — replace_general_dimension_in_facts","text":"","code":"replace_general_dimension_in_facts(st, name, dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/replace_general_dimension_in_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace in facts a star schema general dimension — replace_general_dimension_in_facts","text":"st star_schema object. name string, name dimension. dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_general_dimension_in_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace in facts a star schema general dimension — replace_general_dimension_in_facts","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace records — replace_records","title":"Replace records — replace_records","text":"Replace records primary key.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace records — replace_records","text":"","code":"replace_records(ft, ft_new, fk)"},{"path":"https://josesamos.github.io/starschemar/reference/replace_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace records — replace_records","text":"ft fact_table object. ft_new fact_table object. fk vector foreign key names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace records — replace_records","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_role_dimension_in_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace in facts a star schema role dimension — replace_role_dimension_in_facts","title":"Replace in facts a star schema role dimension — replace_role_dimension_in_facts","text":"Replace facts star schema role dimension","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_role_dimension_in_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace in facts a star schema role dimension — replace_role_dimension_in_facts","text":"","code":"replace_role_dimension_in_facts(st, name, dimension, dimension_names)"},{"path":"https://josesamos.github.io/starschemar/reference/replace_role_dimension_in_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace in facts a star schema role dimension — replace_role_dimension_in_facts","text":"st star_schema object. name string, name dimension. dimension dimension_table object. dimension_names vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/replace_role_dimension_in_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace in facts a star schema role dimension — replace_role_dimension_in_facts","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a dimension into a role dimension — role_dimension","title":"Transform a dimension into a role dimension — role_dimension","text":"role-playing dimension generated, dimensions defined transformed role dimensions. Records removed obtained role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a dimension into a role dimension — role_dimension","text":"","code":"role_dimension(dimension, role_playing_name)  # S3 method for dimension_table role_dimension(dimension, role_playing_name)"},{"path":"https://josesamos.github.io/starschemar/reference/role_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a dimension into a role dimension — role_dimension","text":"dimension dimension_table object. role_playing_name string, name role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a dimension into a role dimension — role_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a role playing dimension in a star_schema object — role_playing_dimension","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"Given list star_schema dimension names, structure, role playing dimension indicated name attributes generated. original dimensions become role dimensions defined new role playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"","code":"role_playing_dimension(st, dim_names, name = NULL, attributes = NULL)  # S3 method for star_schema role_playing_dimension(st, dim_names, name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"st star_schema object. dim_names vector dimension names. name string, name role playing dimension. attributes vector attribute names role playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"definition, role dimensions virtual instances (role playing dimension). foreign keys facts adapted new situation.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/role_playing_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a role playing dimension in a star_schema object — role_playing_dimension","text":"","code":"st <- star_schema(mrs_age, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"Date\", \"Week\", \"Year\")   )  st <- star_schema(mrs_cause, dm_mrs_cause) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Run query — run_query","title":"Run query — run_query","text":"selected facts, dimensions defined conditions instances, can execute query obtain result.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run query — run_query","text":"","code":"run_query(dq, unify_by_grain = TRUE)  # S3 method for dimensional_query run_query(dq, unify_by_grain = TRUE)"},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run query — run_query","text":"dq dimensional_query object. unify_by_grain boolean, unify facts grain.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run query — run_query","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run query — run_query","text":"option, can indicate want unify facts case grain.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/run_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run query — run_query","text":"","code":"ms <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                    attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\")) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\"),     agg_functions = c(\"MAX\")   ) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", city == \"Boston\") |>   run_query()"},{"path":"https://josesamos.github.io/starschemar/reference/select_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Select dimension — select_dimension","title":"Select dimension — select_dimension","text":"add dimension dimensional_query object, define name subset dimension attributes. name dimension indicated, considered attributes added.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/select_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select dimension — select_dimension","text":"","code":"select_dimension(dq, name = NULL, attributes = NULL)  # S3 method for dimensional_query select_dimension(dq, name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/select_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select dimension — select_dimension","text":"dq dimensional_query object. name string, name dimension. attributes vector attribute names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/select_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select dimension — select_dimension","text":"dimensional_query object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/select_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select dimension — select_dimension","text":"","code":"dq <- dimensional_query(ms_mrs) |>   select_dimension(name = \"where\",                   attributes = c(\"city\", \"state\")) |>   select_dimension(name = \"when\")"},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Select fact — select_fact","title":"Select fact — select_fact","text":"define fact consulted, name indicated, optionally, vector names selected measures another aggregation functions also indicated.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select fact — select_fact","text":"","code":"select_fact(dq, name = NULL, measures = NULL, agg_functions = NULL)  # S3 method for dimensional_query select_fact(dq, name = NULL, measures = NULL, agg_functions = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select fact — select_fact","text":"dq dimensional_query object. name string, name fact. measures vector measure names. agg_functions vector aggregation function names. none indicated, defined fact table considered.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select fact — select_fact","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select fact — select_fact","text":"name measure indicated, one corresponding number aggregated rows included, always included. aggregation function included, defined measures considered.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/select_fact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select fact — select_fact","text":"","code":"dq <- dimensional_query(ms_mrs) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\"),     agg_functions = c(\"MAX\")   )  dq <- dimensional_query(ms_mrs) |>   select_fact(name = \"mrs_age\",              measures = c(\"n_deaths\"))  dq <- dimensional_query(ms_mrs) |>   select_fact(name = \"mrs_age\")"},{"path":"https://josesamos.github.io/starschemar/reference/selection_bit_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a record selection bitmap — selection_bit_map","title":"Generate a record selection bitmap — selection_bit_map","text":"Obtain vector boolean select records table combination values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/selection_bit_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a record selection bitmap — selection_bit_map","text":"","code":"selection_bit_map(table, values, names)"},{"path":"https://josesamos.github.io/starschemar/reference/selection_bit_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a record selection bitmap — selection_bit_map","text":"table tibble, table select. values tibble, set values search. names vector column names consider.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/selection_bit_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a record selection bitmap — selection_bit_map","text":"vector boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the dimension name — set_dimension_name","title":"Set the dimension name — set_dimension_name","text":"allows us define name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the dimension name — set_dimension_name","text":"","code":"set_dimension_name(dimension, name)  # S3 method for dimension_table set_dimension_name(dimension, name)"},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the dimension name — set_dimension_name","text":"dimension dimension_table object. name string, name dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the dimension name — set_dimension_name","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the dimension name — set_dimension_name","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the dimension type — set_dimension_type","title":"Set the dimension type — set_dimension_type","text":"allows us define type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the dimension type — set_dimension_type","text":"","code":"set_dimension_type(dimension, type)  # S3 method for dimension_table set_dimension_type(dimension, type)"},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the dimension type — set_dimension_type","text":"dimension dimension_table object. type string, type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the dimension type — set_dimension_type","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the dimension type — set_dimension_type","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_conformed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the type of a conformed dimension — set_dimension_type_conformed","title":"Set the type of a conformed dimension — set_dimension_type_conformed","text":"allows us define type conformed dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_conformed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the type of a conformed dimension — set_dimension_type_conformed","text":"","code":"set_dimension_type_conformed(dimension)  # S3 method for dimension_table set_dimension_type_conformed(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_conformed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the type of a conformed dimension — set_dimension_type_conformed","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_conformed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the type of a conformed dimension — set_dimension_type_conformed","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_conformed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the type of a conformed dimension — set_dimension_type_conformed","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_role_playing.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the type of a role-playing dimension — set_dimension_type_role_playing","title":"Set the type of a role-playing dimension — set_dimension_type_role_playing","text":"allows us define type role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_role_playing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the type of a role-playing dimension — set_dimension_type_role_playing","text":"","code":"set_dimension_type_role_playing(dimension)  # S3 method for dimension_table set_dimension_type_role_playing(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_role_playing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the type of a role-playing dimension — set_dimension_type_role_playing","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_role_playing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the type of a role-playing dimension — set_dimension_type_role_playing","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_dimension_type_role_playing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the type of a role-playing dimension — set_dimension_type_role_playing","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_fact_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Set fact name — set_fact_name","title":"Set fact name — set_fact_name","text":"allows us define name facts.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_fact_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set fact name — set_fact_name","text":"","code":"set_fact_name(ft, name)  # S3 method for fact_table set_fact_name(ft, name)"},{"path":"https://josesamos.github.io/starschemar/reference/set_fact_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set fact name — set_fact_name","text":"ft fact_table object. name string, name fact.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_fact_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set fact name — set_fact_name","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_fact_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set fact name — set_fact_name","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_role_playing_dimension_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the associated role-playing dimension name — set_role_playing_dimension_name","title":"Set the associated role-playing dimension name — set_role_playing_dimension_name","text":"role dimension name role-playing dimension associated. function allows us set name.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_role_playing_dimension_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the associated role-playing dimension name — set_role_playing_dimension_name","text":"","code":"set_role_playing_dimension_name(dimension, name)  # S3 method for dimension_table set_role_playing_dimension_name(dimension, name)"},{"path":"https://josesamos.github.io/starschemar/reference/set_role_playing_dimension_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the associated role-playing dimension name — set_role_playing_dimension_name","text":"dimension dimension_table object. name string, name role-playing dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_role_playing_dimension_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the associated role-playing dimension name — set_role_playing_dimension_name","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/set_role_playing_dimension_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the associated role-playing dimension name — set_role_playing_dimension_name","text":"Attributes can accessed directly function defined used classes thus done controlled way.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style — snake_case","title":"Transform names according to the snake case style — snake_case","text":"Transform fact, dimension, measurement, attribute names according snake case style.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style — snake_case","text":"","code":"snake_case(st)  # S3 method for star_schema snake_case(st)"},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style — snake_case","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style — snake_case","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform names according to the snake case style — snake_case","text":"style suitable going work databases.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/snake_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform names according to the snake case style — snake_case","text":"","code":"st <- star_schema(mrs_age, dm_mrs_age) |>   snake_case()  st <- star_schema(mrs_age, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"Date\", \"Week\", \"Year\")   ) |>   snake_case()"},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style in a dimension — snake_case_dimension","title":"Transform names according to the snake case style in a dimension — snake_case_dimension","text":"Transform column, attribute dimension names according snake case style.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style in a dimension — snake_case_dimension","text":"","code":"snake_case_dimension(dimension)  # S3 method for dimension_table snake_case_dimension(dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style in a dimension — snake_case_dimension","text":"dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style in a dimension — snake_case_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_fact.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style in a fact table — snake_case_fact","title":"Transform names according to the snake case style in a fact table — snake_case_fact","text":"Transform foreign keys, measures fact table names according snake case style.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_fact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style in a fact table — snake_case_fact","text":"","code":"snake_case_fact(ft)  # S3 method for fact_table snake_case_fact(ft)"},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_fact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style in a fact table — snake_case_fact","text":"ft fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/snake_case_fact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style in a fact table — snake_case_fact","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Age — st_mrs_age","title":"Star Schema for Mortality Reporting System by Age — st_mrs_age","text":"Star Schema Mortality Reporting System considering age classification.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Age — st_mrs_age","text":"","code":"st_mrs_age"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Age — st_mrs_age","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Age — st_mrs_age","text":"","code":"# Defined by:  st_mrs_age <- star_schema(mrs_age, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Age Test — st_mrs_age_test","title":"Star Schema for Mortality Reporting System by Age Test — st_mrs_age_test","text":"Star Schema Mortality Reporting System considering age classification data test.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Age Test — st_mrs_age_test","text":"","code":"st_mrs_age_test"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Age Test — st_mrs_age_test","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Age Test — st_mrs_age_test","text":"","code":"# Defined by:  st_mrs_age_test <- star_schema(mrs_age_test, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w10.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Age for Week 10 — st_mrs_age_w10","title":"Star Schema for Mortality Reporting System by Age for Week 10 — st_mrs_age_w10","text":"Star Schema Mortality Reporting System considering age classification data, week 10 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Age for Week 10 — st_mrs_age_w10","text":"","code":"st_mrs_age_w10"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Age for Week 10 — st_mrs_age_w10","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Age for Week 10 — st_mrs_age_w10","text":"","code":"# Defined by:  st_mrs_age_w10 <- star_schema(mrs_age_w10, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w11.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Age for Week 11 — st_mrs_age_w11","title":"Star Schema for Mortality Reporting System by Age for Week 11 — st_mrs_age_w11","text":"Star Schema Mortality Reporting System considering age classification data, week 11 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Age for Week 11 — st_mrs_age_w11","text":"","code":"st_mrs_age_w11"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w11.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Age for Week 11 — st_mrs_age_w11","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w11.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Age for Week 11 — st_mrs_age_w11","text":"","code":"# Defined by:  st_mrs_age_w11 <- star_schema(mrs_age_w11, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Age for Week Test — st_mrs_age_w_test","title":"Star Schema for Mortality Reporting System by Age for Week Test — st_mrs_age_w_test","text":"Star Schema Mortality Reporting System considering age classification data test, week 4 1962. also includes isolated data previous weeks supposed corrections data errors.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Age for Week Test — st_mrs_age_w_test","text":"","code":"st_mrs_age_w_test"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Age for Week Test — st_mrs_age_w_test","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_age_w_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Age for Week Test — st_mrs_age_w_test","text":"","code":"# Defined by:  st_mrs_age_w_test <- star_schema(mrs_age_w_test, dm_mrs_age) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_available\"),     name = \"When Common\",     attributes = c(\"date\", \"week\", \"year\")   ) |>   snake_case() |>   character_dimensions(NA_replacement_value = \"Unknown\",                        length_integers = list(week = 2))"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Cause — st_mrs_cause","title":"Star Schema for Mortality Reporting System by Cause — st_mrs_cause","text":"Star Schema Mortality Reporting System considering cause classification.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Cause — st_mrs_cause","text":"","code":"st_mrs_cause"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Cause — st_mrs_cause","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Cause — st_mrs_cause","text":"","code":"# Defined by:  st_mrs_cause <- star_schema(mrs_cause, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Cause Test — st_mrs_cause_test","title":"Star Schema for Mortality Reporting System by Cause Test — st_mrs_cause_test","text":"Star Schema Mortality Reporting System considering cause classification data test.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Cause Test — st_mrs_cause_test","text":"","code":"st_mrs_cause_test"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Cause Test — st_mrs_cause_test","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Cause Test — st_mrs_cause_test","text":"","code":"# Defined by:  st_mrs_cause_test <- star_schema(mrs_cause_test, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w10.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Cause for Week 10 — st_mrs_cause_w10","title":"Star Schema for Mortality Reporting System by Cause for Week 10 — st_mrs_cause_w10","text":"Star Schema Mortality Reporting System considering cause classification data, week 10 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Cause for Week 10 — st_mrs_cause_w10","text":"","code":"st_mrs_cause_w10"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Cause for Week 10 — st_mrs_cause_w10","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Cause for Week 10 — st_mrs_cause_w10","text":"","code":"# Defined by:  st_mrs_cause_w10 <- star_schema(mrs_cause_w10, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w11.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Cause for Week 11 — st_mrs_cause_w11","title":"Star Schema for Mortality Reporting System by Cause for Week 11 — st_mrs_cause_w11","text":"Star Schema Mortality Reporting System considering cause classification data, week 11 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Cause for Week 11 — st_mrs_cause_w11","text":"","code":"st_mrs_cause_w11"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w11.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Cause for Week 11 — st_mrs_cause_w11","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w11.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Cause for Week 11 — st_mrs_cause_w11","text":"","code":"# Defined by:  st_mrs_cause_w11 <- star_schema(mrs_cause_w11, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Schema for Mortality Reporting System by Cause for Week Test — st_mrs_cause_w_test","title":"Star Schema for Mortality Reporting System by Cause for Week Test — st_mrs_cause_w_test","text":"Star Schema Mortality Reporting System considering cause classification data test, week 4 1962. also includes isolated data previous weeks supposed additional data considered .","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Schema for Mortality Reporting System by Cause for Week Test — st_mrs_cause_w_test","text":"","code":"st_mrs_cause_w_test"},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Schema for Mortality Reporting System by Cause for Week Test — st_mrs_cause_w_test","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/st_mrs_cause_w_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star Schema for Mortality Reporting System by Cause for Week Test — st_mrs_cause_w_test","text":"","code":"# Defined by:  st_mrs_cause_w_test <- star_schema(mrs_cause_w_test, dm_mrs_cause) |>   snake_case() |>   character_dimensions(     NA_replacement_value = \"Unknown\",     length_integers = list(       week = 2,       data_availability_week = 2,       reception_week = 2     )   ) |>   role_playing_dimension(     dim_names = c(\"when\", \"when_received\", \"when_available\"),     name = \"when_common\",     attributes = c(\"date\", \"week\", \"year\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"star_schema S3 class — star_schema","title":"star_schema S3 class — star_schema","text":"Creates star_schema object flat table (implemented tibble) dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"star_schema S3 class — star_schema","text":"","code":"star_schema(ft, sd)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"star_schema S3 class — star_schema","text":"ft tibble, implements flat table. sd dimensional_model object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"star_schema S3 class — star_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"star_schema S3 class — star_schema","text":"Transforms flat table data according facts dimension definitions dimensional_model object. dimension generated surrogate key foreign key facts. Facts contain measurements foreign keys.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/star_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"star_schema S3 class — star_schema","text":"","code":"st <- star_schema(mrs_age, dm_mrs_age)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_flat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a star schema as a flat table — star_schema_as_flat_table","title":"Export a star schema as a flat table — star_schema_as_flat_table","text":"refined format content facts dimensions, can obtain flat table, implemented using tibble, star schema.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_flat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a star schema as a flat table — star_schema_as_flat_table","text":"","code":"star_schema_as_flat_table(st)  # S3 method for star_schema star_schema_as_flat_table(st)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_flat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a star schema as a flat table — star_schema_as_flat_table","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_flat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a star schema as a flat table — star_schema_as_flat_table","text":"tibble.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_flat_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a star schema as a flat table — star_schema_as_flat_table","text":"","code":"ft <- st_mrs_age |>   star_schema_as_flat_table()"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Star schema as multistar export (common) — star_schema_as_mst","title":"Star schema as multistar export (common) — star_schema_as_mst","text":"Star schema multistar export (common)","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star schema as multistar export (common) — star_schema_as_mst","text":"","code":"star_schema_as_mst(st, fl = NULL, dl = NULL, commondim = NULL)  # S3 method for star_schema star_schema_as_mst(st, fl = NULL, dl = NULL, commondim = NULL)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Star schema as multistar export (common) — star_schema_as_mst","text":"st star_schema object. fl list fact_table objects. dl list dimension_table objects. commondim list dimension names already included.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Star schema as multistar export (common) — star_schema_as_mst","text":"multistar object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_multistar.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a star schema as a multistar — star_schema_as_multistar","title":"Export a star schema as a multistar — star_schema_as_multistar","text":"refined format content facts dimensions, can obtain multistar. multistar distinguishes general conformed dimensions, dimension data. can contain multiple fact tables.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_multistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a star schema as a multistar — star_schema_as_multistar","text":"","code":"star_schema_as_multistar(st)  # S3 method for star_schema star_schema_as_multistar(st)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_multistar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a star schema as a multistar — star_schema_as_multistar","text":"st star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_multistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a star schema as a multistar — star_schema_as_multistar","text":"multistar object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_multistar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a star schema as a multistar — star_schema_as_multistar","text":"","code":"ms <- st_mrs_age |>   star_schema_as_multistar()"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tibble_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a star schema as a tibble list — star_schema_as_tibble_list","title":"Export a star schema as a tibble list — star_schema_as_tibble_list","text":"refined format content facts dimensions, can obtain tibble list . Role playing dimensions can optionally included.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tibble_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a star schema as a tibble list — star_schema_as_tibble_list","text":"","code":"star_schema_as_tibble_list(st, include_role_playing = FALSE)  # S3 method for star_schema star_schema_as_tibble_list(st, include_role_playing = FALSE)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tibble_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a star schema as a tibble list — star_schema_as_tibble_list","text":"st star_schema object. include_role_playing boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tibble_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a star schema as a tibble list — star_schema_as_tibble_list","text":"list tibble objects.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tibble_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a star schema as a tibble list — star_schema_as_tibble_list","text":"","code":"tl <- st_mrs_age |>   star_schema_as_tibble_list()  tl <- st_mrs_age |>   star_schema_as_tibble_list(include_role_playing = TRUE)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tl.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a star schema as a tibble list (common) — star_schema_as_tl","title":"Export a star schema as a tibble list (common) — star_schema_as_tl","text":"Export star schema tibble list (common)","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a star schema as a tibble list (common) — star_schema_as_tl","text":"","code":"star_schema_as_tl(st, tl_prev = NULL, commondim = NULL, include_role_playing)  # S3 method for star_schema star_schema_as_tl(st, tl_prev = NULL, commondim = NULL, include_role_playing)"},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a star schema as a tibble list (common) — star_schema_as_tl","text":"st star_schema object. tl_prev list tibble objects. commondim list dimension names already included. include_role_playing boolean.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/star_schema_as_tl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a star schema as a tibble list (common) — star_schema_as_tl","text":"tibble list.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtaining Star Schemas from Flat Tables — starschemar","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"Transformations allow obtaining star schemas flat tables.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"flat tables star schemas can defined can form constellations (star schema constellation definition functions). Dimensions contain data without duplicates, operations data cleaning can applied (data cleaning functions). Dimensions can enriched adding additional columns, sometimes using functions, others explicitly defined user (dimension enrichment functions). new data obtained, necessary refresh existing data means incremental refresh operations delete data longer necessary (incremental refresh functions). Finally, results obtained can exported consulted tools (results export functions) defined query functions (query functions).","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"star-schema-and-constellation-definition","dir":"Reference","previous_headings":"","what":"Star schema and constellation definition","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"Starting flat table, dimensional model defined specifying attributes make dimensions measurements facts. result dimensional_model object. carried following dimensional model definition functions: dimensional_model() define_dimension() define_fact() star schema defined flat table dimensional model definition. defined, star schema can transformed defining role playing dimensions, changing writing style element names type dimension attributes. operations carried following star schema definition transformation functions: star_schema() role_playing_dimension() snake_case() character_dimensions() star schema defined, can rename elements. necessary able rename attributes dimensions measures facts definition operations allowed us select columns flat table. completeness also dimensions facts can renamed. carry operations, following star schema rename functions available: rename_dimension() get_dimension_attribute_names() rename_dimension_attributes() rename_fact() get_measure_names() rename_measures() Based various star schemas, constellation can defined star schemas share common dimensions. Dimensions name must shared. defined following constellation definition function: constellation()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"data-cleaning","dir":"Reference","previous_headings":"","what":"Data cleaning","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"star schemas constellations defined, data cleaning operations can carried dimensions. three groups functions: one obtain dimensions star schemas constellations; another define data cleaning operations dimensions; one apply operations star schemas constellations. Obtaining dimensions: get_dimension_names() get_dimension() get_conformed_dimension_names() get_conformed_dimension() Update definition functions: record_update_set() match_records() update_record() update_selection() update_selection_general() Modification application functions: modify_dimension_records() modify_conformed_dimension_records()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"dimension-enrichment","dir":"Reference","previous_headings":"","what":"Dimension enrichment","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"enrich dimension new attributes related others already included , first, export attributes new ones depend, define new attributes, import table attributes added dimension. enrich_dimension_export() enrich_dimension_import()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"incremental-refresh","dir":"Reference","previous_headings":"","what":"Incremental refresh","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"new data obtained, incremental refresh data can carried , dimensions facts. Incremental refresh can applied star schema constellation, using following functions: incremental_refresh_star_schema() incremental_refresh_constellation() Sometimes data refresh consists eliminating data longer necessary, generally corresponds period stopped analysed can also reasons. data can selected using following function: filter_fact_rows() fact data removed (using incremental refresh functions), can remove data dimensions longer needed using following functions: purge_dimensions_star_schema() purge_dimensions_constellation()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"results-export","dir":"Reference","previous_headings":"","what":"Results export","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"data properly structured transformed, can exported consulted tools R. Various export formats defined, star schemas constellations, using following functions: star_schema_as_flat_table() star_schema_as_multistar() star_schema_as_tibble_list() constellation_as_multistar() constellation_as_tibble_list() multistar_as_flat_table()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/starschemar.html","id":"query-functions","dir":"Reference","previous_headings":"","what":"Query functions","title":"Obtaining Star Schemas from Flat Tables — starschemar","text":"many multidimensional query tools available. exported data, stored files, can used directly . Using following functions, can also perform basic queries R data multistar format: dimensional_query() select_fact() select_dimension() filter_dimension() run_query()","code":""},{"path":"https://josesamos.github.io/starschemar/reference/typed_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a value according to its type — typed_value","title":"Transform a value according to its type — typed_value","text":"Transform string value according given type.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/typed_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a value according to its type — typed_value","text":"","code":"typed_value(value, type)"},{"path":"https://josesamos.github.io/starschemar/reference/typed_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a value according to its type — typed_value","text":"value string. type string","code":""},{"path":"https://josesamos.github.io/starschemar/reference/typed_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a value according to its type — typed_value","text":"typed value.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/unify_facts_by_grain.html","id":null,"dir":"Reference","previous_headings":"","what":"Unify facts by grain — unify_facts_by_grain","title":"Unify facts by grain — unify_facts_by_grain","text":"Unify facts grain","code":""},{"path":"https://josesamos.github.io/starschemar/reference/unify_facts_by_grain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unify facts by grain — unify_facts_by_grain","text":"","code":"unify_facts_by_grain(dq)"},{"path":"https://josesamos.github.io/starschemar/reference/unify_facts_by_grain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unify facts by grain — unify_facts_by_grain","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/unify_facts_by_grain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unify facts by grain — unify_facts_by_grain","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/union_of_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform union of dimensions — union_of_dimensions","title":"Perform union of dimensions — union_of_dimensions","text":"Generates new dimension instances dimensions list, union dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/union_of_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform union of dimensions — union_of_dimensions","text":"","code":"union_of_dimensions(dimensions, name = NULL, type = \"role_playing\")"},{"path":"https://josesamos.github.io/starschemar/reference/union_of_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform union of dimensions — union_of_dimensions","text":"dimensions List dimension_table objects. name string, name dimension. type string, type dimension.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/union_of_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform union of dimensions — union_of_dimensions","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimension record update operations to a dimension — update_dimension","title":"Apply dimension record update operations to a dimension — update_dimension","text":"Given list dimension record update operations, applied dimension_table object. Update operations must defined set functions available purpose.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimension record update operations to a dimension — update_dimension","text":"","code":"update_dimension(dimension, updates)  # S3 method for dimension_table update_dimension(dimension, updates)"},{"path":"https://josesamos.github.io/starschemar/reference/update_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimension record update operations to a dimension — update_dimension","text":"dimension dimension_table object. updates record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimension record update operations to a dimension — update_dimension","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply update operations to dimensions — update_dimensions","title":"Apply update operations to dimensions — update_dimensions","text":"Apply dimension record update operations dimensions list. Returns list modified dimensions.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply update operations to dimensions — update_dimensions","text":"","code":"update_dimensions(dimensions, updates)"},{"path":"https://josesamos.github.io/starschemar/reference/update_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply update operations to dimensions — update_dimensions","text":"dimensions List dimension_table objects update. updates record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply update operations to dimensions — update_dimensions","text":"List updated dimension_table objects.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Update facts with a list of modified dimensions — update_facts_with_dimensions","title":"Update facts with a list of modified dimensions — update_facts_with_dimensions","text":"Update fact table modified dimensions. New dimensions generated modified ones.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update facts with a list of modified dimensions — update_facts_with_dimensions","text":"","code":"update_facts_with_dimensions(st, dimensions)  # S3 method for star_schema update_facts_with_dimensions(st, dimensions)"},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update facts with a list of modified dimensions — update_facts_with_dimensions","text":"st star_schema object. dimensions list dimension_table objects.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update facts with a list of modified dimensions — update_facts_with_dimensions","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_general_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Update facts with a general dimension — update_facts_with_general_dimension","title":"Update facts with a general dimension — update_facts_with_general_dimension","text":"Update facts general dimension","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_general_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update facts with a general dimension — update_facts_with_general_dimension","text":"","code":"update_facts_with_general_dimension(st, name, old_dimension, dimension)"},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_general_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update facts with a general dimension — update_facts_with_general_dimension","text":"st star_schema object. name string, name dimension. old_dimension dimension_table object. dimension dimension_table object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_general_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update facts with a general dimension — update_facts_with_general_dimension","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_role_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Update facts with a role dimension — update_facts_with_role_dimension","title":"Update facts with a role dimension — update_facts_with_role_dimension","text":"Update facts role dimension","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_role_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update facts with a role dimension — update_facts_with_role_dimension","text":"","code":"update_facts_with_role_dimension(   st,   name,   old_dimension,   dimension,   dimension_names )"},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_role_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update facts with a role dimension — update_facts_with_role_dimension","text":"st star_schema object. name string, name dimension. old_dimension dimension_table object. dimension dimension_table object. dimension_names vector dimension names.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_facts_with_role_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update facts with a role dimension — update_facts_with_role_dimension","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a dimension record with a set of values — update_record","title":"Update a dimension record with a set of values — update_record","text":"dimension, given primary key one record, adds update set updates modifies combination values rest attributes selected record become given.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a dimension record with a set of values — update_record","text":"","code":"update_record(updates = NULL, dimension, old, values = vector())  # S3 method for record_update_set update_record(updates = NULL, dimension, old, values = vector())"},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a dimension record with a set of values — update_record","text":"updates record_update_set object. dimension dimension_table object, dimension update. old number, primary key record modify. values vector character values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a dimension record with a set of values — update_record","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a dimension record with a set of values — update_record","text":"Primary key used get combination values easily. update defined exclusively rest values.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/update_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a dimension record with a set of values — update_record","text":"","code":"dim_names <- st_mrs_age |>     get_dimension_names()  where <- st_mrs_age |>   get_dimension(\"where\")  # head(where, 2)  updates <- record_update_set() |>   update_record(     dimension = where,     old = 1,     values = c(\"1\", \"CT\", \"Bridgeport\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/update_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Update dimension records with a set of values — update_selection","title":"Update dimension records with a set of values — update_selection","text":"dimension, given vector column names, vector old values vector new values, adds update set updates modifies records combination old values columns new values columns.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update dimension records with a set of values — update_selection","text":"","code":"update_selection(   updates = NULL,   dimension,   columns = vector(),   old_values = vector(),   new_values = vector() )  # S3 method for record_update_set update_selection(   updates = NULL,   dimension,   columns = vector(),   old_values = vector(),   new_values = vector() )"},{"path":"https://josesamos.github.io/starschemar/reference/update_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update dimension records with a set of values — update_selection","text":"updates record_update_set object. dimension dimension_table object, dimension update. columns vector column names. old_values vector character values. new_values vector character values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update dimension records with a set of values — update_selection","text":"record_update_set object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/update_selection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update dimension records with a set of values — update_selection","text":"","code":"dim_names <- st_mrs_age |>     get_dimension_names()  where <- st_mrs_age |>   get_dimension(\"where\")  # head(where, 2)  updates <- record_update_set() |>   update_selection(     dimension = where,     columns = c(\"city\"),     old_values = c(\"Bridgepor\"),     new_values = c(\"Bridgeport\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/update_selection_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Update dimension records with a set of values in given columns — update_selection_general","title":"Update dimension records with a set of values in given columns — update_selection_general","text":"dimension, given vector column names, vector old values columns, another vector column names, vector new values columns, adds update set updates modifies records combination old values first column vector new values second column vector.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_selection_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update dimension records with a set of values in given columns — update_selection_general","text":"","code":"update_selection_general(   updates = NULL,   dimension,   columns_old = vector(),   old_values = vector(),   columns_new = vector(),   new_values = vector() )  # S3 method for record_update_set update_selection_general(   updates = NULL,   dimension,   columns_old = vector(),   old_values = vector(),   columns_new = vector(),   new_values = vector() )"},{"path":"https://josesamos.github.io/starschemar/reference/update_selection_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update dimension records with a set of values in given columns — update_selection_general","text":"updates record_update_set object. dimension dimension_table object, dimension update. columns_old vector column names. old_values vector character values. columns_new vector column names. new_values vector character values.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/update_selection_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update dimension records with a set of values in given columns — update_selection_general","text":"record_update_set object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/reference/update_selection_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update dimension records with a set of values in given columns — update_selection_general","text":"","code":"dim_names <- st_mrs_age |>     get_dimension_names()  where <- st_mrs_age |>   get_dimension(\"where\")  # head(where, 2)  updates <- record_update_set() |>   update_selection_general(     dimension = where,     columns_old = c(\"state\", \"city\"),     old_values = c(\"CT\", \"Bridgepor\"),     columns_new = c(\"city\"),     new_values = c(\"Bridgeport\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates for the Star Schema for Mortality Reporting System by Age — updates_st_mrs_age","title":"Updates for the Star Schema for Mortality Reporting System by Age — updates_st_mrs_age","text":"Example updates dimensions star schema Mortality Reporting System age.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates for the Star Schema for Mortality Reporting System by Age — updates_st_mrs_age","text":"","code":"updates_st_mrs_age"},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Updates for the Star Schema for Mortality Reporting System by Age — updates_st_mrs_age","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updates for the Star Schema for Mortality Reporting System by Age — updates_st_mrs_age","text":"","code":"# Defined by:  (dim_names <- st_mrs_age |>     get_dimension_names()) #> [1] \"when\"           \"when_available\" \"where\"          \"who\"             where <- st_mrs_age |>   get_dimension(\"where\")  when <- st_mrs_age |>   get_dimension(\"when\")  who <- st_mrs_age |>   get_dimension(\"who\")  updates_st_mrs_age <- record_update_set() |>   update_selection_general(     dimension = where,     columns_old = c(\"state\", \"city\"),     old_values = c(\"CT\", \"Bridgepor\"),     columns_new = c(\"city\"),     new_values = c(\"Bridgeport\")   ) |>   match_records(dimension = when,                 old = 37,                 new = 36) |>   update_record(     dimension = when,     old = 73,     values = c(\"1962-02-17\", \"07\", \"1962\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"<1 year\"),     new_values = c(\"1: <1 year\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"1-24 years\"),     new_values = c(\"2: 1-24 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"25-44 years\"),     new_values = c(\"3: 25-44 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"45-64 years\"),     new_values = c(\"4: 45-64 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"65+ years\"),     new_values = c(\"5: 65+ years\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates for the Star Schema for Mortality Reporting System by Age Test — updates_st_mrs_age_test","title":"Updates for the Star Schema for Mortality Reporting System by Age Test — updates_st_mrs_age_test","text":"Example updates dimensions star schema Mortality Reporting System age test.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates for the Star Schema for Mortality Reporting System by Age Test — updates_st_mrs_age_test","text":"","code":"updates_st_mrs_age_test"},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Updates for the Star Schema for Mortality Reporting System by Age Test — updates_st_mrs_age_test","text":"record_update_set object.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/updates_st_mrs_age_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updates for the Star Schema for Mortality Reporting System by Age Test — updates_st_mrs_age_test","text":"","code":"# Defined by:  (dim_names <- st_mrs_age_test |>     get_dimension_names()) #> [1] \"when\"           \"when_available\" \"where\"          \"who\"             where <- st_mrs_age_test |>   get_dimension(\"where\")  when <- st_mrs_age_test |>   get_dimension(\"when\")  who <- st_mrs_age_test |>   get_dimension(\"who\")  updates_st_mrs_age_test <- record_update_set() |>   update_selection_general(     dimension = where,     columns_old = c(\"state\", \"city\"),     old_values = c(\"CT\", \"Bridgepor\"),     columns_new = c(\"city\"),     new_values = c(\"Bridgeport\")   ) |>   match_records(dimension = when,                 old = 4,                 new = 3) |>   update_record(     dimension = when,     old = 9,     values = c(\"1962-01-20\", \"03\", \"1962\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"<1 year\"),     new_values = c(\"1: <1 year\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"1-24 years\"),     new_values = c(\"2: 1-24 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"25-44 years\"),     new_values = c(\"3: 25-44 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"45-64 years\"),     new_values = c(\"4: 45-64 years\")   ) |>   update_selection(     dimension = who,     columns = c(\"age_range\"),     old_values = c(\"65+ years\"),     new_values = c(\"5: 65+ years\")   )"},{"path":"https://josesamos.github.io/starschemar/reference/validate_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate names — validate_names","title":"Validate names — validate_names","text":"Validate names","code":""},{"path":"https://josesamos.github.io/starschemar/reference/validate_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate names — validate_names","text":"","code":"validate_names(defined_names, names, concept = \"name\", repeated = FALSE)"},{"path":"https://josesamos.github.io/starschemar/reference/validate_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate names — validate_names","text":"defined_names vector strings, defined attribute names. names vector strings, new attribute names. concept string, treated concept. repeated boolean, repeated names allowed.","code":""},{"path":"https://josesamos.github.io/starschemar/reference/validate_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate names — validate_names","text":"vector strings, names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-123","dir":"Changelog","previous_headings":"","what":"starschemar 1.2.3","title":"starschemar 1.2.3","text":"Define error messages. Reorganization code make geomultistar package independent.","code":""},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-122","dir":"Changelog","previous_headings":"","what":"starschemar 1.2.2","title":"starschemar 1.2.2","text":"CRAN release: 2023-09-14 Fix broken @docType package documentation. Include notice rolap package.","code":""},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-121","dir":"Changelog","previous_headings":"","what":"starschemar 1.2.1","title":"starschemar 1.2.1","text":"CRAN release: 2023-08-12 result queries, facts granularity unified, prefix name facts name measurements facts unify second table (previous version, prefix put measurement corresponding number records added). Fix problems make compatible dplyr 1.1.0.","code":""},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-120","dir":"Changelog","previous_headings":"","what":"starschemar 1.2.0","title":"starschemar 1.2.0","text":"CRAN release: 2020-09-25 New data sets enrich dimensions: [ft_london_boroughs], [ft_usa_states] [ft_usa_city_county]. data set [ms_mrs] defined according result obtained vignette, can used packages. New function get missing instances enrich dimension: [enrich_dimension_import_test()]. New functions get star schema names star schema constellation: [get_star_schema_names] [get_star_schema]. Improve structure content vignette.","code":""},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-110","dir":"Changelog","previous_headings":"","what":"starschemar 1.1.0","title":"starschemar 1.1.0","text":"CRAN release: 2020-09-13 New dimension enrichment features: [enrich_dimension_export()] [enrich_dimension_import()]. New functions filter facts purge dimensions (delete unnecessary data): [filter_fact_rows()] [purge_dimensions()]. New query definition functions exported multistar format: [dimensional_query()], [select_fact()], [select_dimension()], [filter_dimension()] [run_query()]. New functions rename dimensions, attributes, facts measures star schema: [rename_dimension()], [get_dimension_attribute_names()], [rename_dimension_attributes()], [rename_fact()], [get_measure_names()] [rename_measures()]. New function export multistar (possibly obtained result query) flat table: [multistar_as_flat_table()]. New data available develop additional examples: [ft_datagov_uk].","code":""},{"path":"https://josesamos.github.io/starschemar/news/index.html","id":"starschemar-100","dir":"Changelog","previous_headings":"","what":"starschemar 1.0.0","title":"starschemar 1.0.0","text":"CRAN release: 2020-08-07 Initial functionality defining star schemas constellations. Data cleaning. Incremental refresh. Results export.","code":""}]
